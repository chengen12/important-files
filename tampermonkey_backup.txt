{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"iZhihu","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://www.zhihu.com/*","https://www.zhihu.com/*"],"orig_matches":["http://www.zhihu.com/*","https://www.zhihu.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512425},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/350-izhihu/code/iZhihu.user.js","uuid":"448690c0-2bc3-49b7-92d9-64baee8f2041","source":""},{"name":"OnlineVideoConverter.com","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://www.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512434},"enabled":true,"position":2,"file_url":"https://www.onlinevideoconverter.com/assets/javascript/ovc.user.js","uuid":"0b100194-d608-49b3-8f53-e403a14d1077","source":""},{"name":"youkuvod","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://v.youku.com/v_show/id*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":["shokdown.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512441},"enabled":false,"position":3,"file_url":"https://greasyfork.org/scripts/2837-youkuvod/code/youkuvod.user.js","uuid":"c69f12d6-2881-4a3e-9a40-38d186bcd071","source":""},{"name":"护眼脚本","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*","ftp*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"colorValue":"sgreen"},"ts":1489756512447},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/14716-%E6%8A%A4%E7%9C%BC%E8%84%9A%E6%9C%AC/code/%E6%8A%A4%E7%9C%BC%E8%84%9A%E6%9C%AC.user.js","uuid":"e0d6d1fa-c67f-4fea-92a4-4e4d5190f22d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIOaKpOecvOiEmuacrAovLyBAbmFtZXNwYWNlICAgaHR0cO+8mi8vd3d3LmhvdWhvbmd3ZWkueHl6Ci8vIEBkZXNjcmlwdGlvbiDkv67mlLnnvZHpobXog4zmma/oibLvvIzorqnnvZHpobXog4zmma/oibLlgY/nmb3nmoTpg6jliIblj5jmiJDkuaHlnJ/pu4TjgIHosYbmspnnu7/miJbogIXmtYXoibLngbDvvIzmm7TliqDmiqTnnLzjgILpu5jorqTmiqTnnLzoibLmmK/kuaHlnJ/pu4TjgIIgCi8vIEBpY29uICAgICAgICBodHRwOi8vZC5sYW5yZW50dWt1LmNvbS9kb3duL3BuZy8xNDA2LzQweGlhb2Rvbmd3dS90cm9waWNhbC1maXNoLnBuZwovLyBAaW5jbHVkZSAgICAgaHR0cCoKLy8gQGluY2x1ZGUgICAgIGZ0cCogCi8vIEB2ZXJzaW9uICAgICAxLjAKLy8gQGdyYW50ICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKLy8gQGdyYW50ICAgICAgIEdNX3NldFZhbHVlCi8vIEBncmFudCAgICAgICBHTV9nZXRWYWx1ZQovLyA9PS9Vc2VyU2NyaXB0PT0KCi8v5b2T572R6aG155qE6IOM5pmv6aKc6Imy55qEcmdi5YC85YiG5Yir5aSn5LqOR3IxLEdnMSxHYjHml7bmraTohJrmnKzlsIbmiorpopzoibLmlLnmiJDnm67moIfpopzoibJjb2xvcgp2YXIgR3IxID0gMjQyOyAvL1JHQuS4reeahFLlgLwKdmFyIEdnMSA9IDI0MjsgLy9SR0LkuK3nmoRH5YC8CnZhciBHYjEgPSAyNDI7IC8vUkdC5Lit55qEQuWAvAoKLy8qKioqKioqKioq5Lul5LiL5Luj56CB55So5oi35peg6ZyA5L+u5pS5KioqKioqKioqKiovLwp2YXIgR3IsIEdnLCBHYjsgLy/lhajlsYDlj5jph4/orrDlvZXlvZPliY3moIfnrb7nmoRyZ2LlgLws55So5LqO5q+U6L6DCgovL+S7peS4i+WHveaVsOeUqOS6juWIhuino+iOt+WPlueahCJyZ2IoMjU1LCAyNTUsIDI1NSki5qC85byP55qEcmdiCmZ1bmN0aW9uIEZHcmdiKEdyZ2IpIHsKICAgIEdyZ2IgPSBHcmdiLnJlcGxhY2UoL1tyZ2JhXChcKV0vZywgJycpOwogICAgdmFyIGthaXNpID0gR3JnYi5zcGxpdCgiLCIpOwogICAgaWYgKGthaXNpIDwgMykgcmV0dXJuOwogICAgR3IgPSBwYXJzZUludChrYWlzaVswXSk7CiAgICBHZyA9IHBhcnNlSW50KGthaXNpWzFdKTsKICAgIEdiID0gcGFyc2VJbnQoa2Fpc2lbMl0pOwogICAgLy9hbGVydChHcisifCIrR2IrInwiK0dnKTsKfQoKCmZ1bmN0aW9uIGNoYW5nZUFsbEVsZW1lbnRzQ29sb3IoY29sb3IpIHsKICAgIHZhciBMY29sb3IgPSAiIjsgLy/nlKjkuo7orrDlvZXnvZHpobXkuK3ojrflj5bnmoTog4zmma/popzoibIKICAgIC8v6I635Y+W5bm25L+u5pS55omA5pyJ5qCH562+55qE6IOM5pmv6aKc6ImyCiAgICB2YXIgYWxsdGFncyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIik7CiAgICB2YXIgbGVuID0gYWxsdGFncy5sZW5ndGg7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CgogICAgICAgIGlmIChhbGx0YWdzW2ldLnN0eWxlLmJhY2tncm91bmRDb2xvciA9PSBjb2xvcikgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CgogICAgICAgIExjb2xvciA9IGRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUoYWxsdGFnc1tpXSwgIiIpLmdldFByb3BlcnR5VmFsdWUoImJhY2tncm91bmQtQ29sb3IiKTsKICAgICAgICBGR3JnYihMY29sb3IpOwogICAgICAgIGlmIChHciA+IEdyMSAmJiBHZyA+IEdnMSAmJiBHYiA+IEdiMSkgewogICAgICAgICAgICBhbGx0YWdzW2ldLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yOwogICAgICAgIH0KICAgIH0KfQoKZnVuY3Rpb24gZml4QXV0b1BhZ2UoKSB7CiAgICB2YXIgX2JvZHlIZWlnaHQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDsKICAgIC8vIOWIm+W7uuinguWvn+iAheWvueixoQogICAgdmFyIG9ic2VydmVyID0gbmV3IHdpbmRvdy5NdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKG11dGF0aW9ucykgewogICAgICAgIGlmIChtdXRhdGlvbnNbMF0uYWRkZWROb2RlcykgewogICAgICAgICAgICBpZiAoZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQgPiBfYm9keUhlaWdodCkgewoKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCItLS0tLS0tLWFkZGVkTm9kZXMtLS0tLS0tLS0iKTsKCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgIGNoYW5nZUFsbEVsZW1lbnRzQ29sb3IoKTsKICAgICAgICAgICAgICAgIH0sIDIwMCk7CgogICAgICAgICAgICAgICAgX2JvZHlIZWlnaHQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0pOwogICAgb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudCwgewogICAgICAgIGNoaWxkTGlzdDogdHJ1ZSwKICAgICAgICBzdWJ0cmVlOiB0cnVlCiAgICB9KTsKfQoKZnVuY3Rpb24gY2hhbmdlQ29sb3IoY29sb3JWYWx1ZSkgewogICAgdmFyIGNvbG9yID0gIiNGNkY0RUMiOyAvL+aUueWPmOWQjueahOiDjOaZr+minOiJsgogICAgdmFyIExjb2xvciA9ICIiOyAvL+eUqOS6juiusOW9lee9kemhteS4reiOt+WPlueahOiDjOaZr+minOiJsgogICAgLy/ojrflj5blubbkv67mlLlib2R555qE6IOM5pmv6aKc6ImyLgogICAgCiAgICBpZiAoY29sb3JWYWx1ZSA9PSAieWVsbG93IikKICAgIHsKICAgICAgICBjb2xvciA9ICIjRjZGNEVDIjsKICAgICAgICAvL2FsZXJ0KCJZZWxsb3ciKTsKICAgIH0KICAgIGVsc2UgaWYgKGNvbG9yVmFsdWUgPT0gImdyZWVuIikKICAgIHsKICAgICAgICBjb2xvciA9ICIjQ0NFOENGIjsKICAgICAgICAvL2FsZXJ0KCJHcmVlbiIpOwogICAgfQogICAgZWxzZSBpZiAoY29sb3JWYWx1ZSA9PSAiZ3JleSIpCiAgICB7CiAgICAgICAgY29sb3IgPSAiI0YyRjJGMiI7CiAgICAgICAgLy9hbGVydCgiR3JleSIpOwogICAgfQoKICAgIHRyeSB7CiAgICAgICAgTGNvbG9yID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5ib2R5LCAiIikuZ2V0UHJvcGVydHlWYWx1ZSgiYmFja2dyb3VuZC1Db2xvciIpOwogICAgfSBjYXRjaCAoZSkgewogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBGR3JnYihMY29sb3IpOwoKICAgIGlmICgoR3IgPiBHcjEgJiYgR2cgPiBHZzEgJiYgR2IgPiBHYjEpIHx8IExjb2xvciA9PSAidHJhbnNwYXJlbnQiIHx8IEdyID09IDAgJiYgR2cgPT0gMCAmJiBHYiA9PSAwKSAvL3RyYW5zcGFyZW506KGo56S66YCP5piOCiAgICB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcjsKICAgIH0KCiAgICBjaGFuZ2VBbGxFbGVtZW50c0NvbG9yKGNvbG9yKTsKCiAgICBmaXhBdXRvUGFnZSgpOwogICAgCn0KCmZ1bmN0aW9uIGNoYW5nZUNvbG9yWWVsbG93KCkgewogICAgY2hhbmdlQ29sb3IoInllbGxvdyIpOwogICAgR01fc2V0VmFsdWUoImNvbG9yVmFsdWUiLCAieWVsbG93Iik7Cn0KCmZ1bmN0aW9uIGNoYW5nZUNvbG9yR3JlZW4oKSB7CiAgICBjaGFuZ2VDb2xvcigiZ3JlZW4iKTsKICAgIEdNX3NldFZhbHVlKCJjb2xvclZhbHVlIiwgImdyZWVuIik7Cn0KCmZ1bmN0aW9uIGNoYW5nZUNvbG9yR3JleSgpIHsKICAgIGNoYW5nZUNvbG9yKCJncmV5Iik7CiAgICBHTV9zZXRWYWx1ZSgiY29sb3JWYWx1ZSIsICJncmV5Iik7Cn0KCkdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoIuS5oeWcn+m7hCIsIGNoYW5nZUNvbG9yWWVsbG93LCAneScpOwpHTV9yZWdpc3Rlck1lbnVDb21tYW5kKCLosYbmspnnu78iLCBjaGFuZ2VDb2xvckdyZWVuLCAnZycpOwpHTV9yZWdpc3Rlck1lbnVDb21tYW5kKCLmtYXoibLngbAiLCBjaGFuZ2VDb2xvckdyZXksICdyJyk7CgoKdmFyIGNvbG9yVmFsdWUgPSBHTV9nZXRWYWx1ZSgiY29sb3JWYWx1ZSIsICJub25lIik7CgppZiAoY29sb3JWYWx1ZSA9PSAibm9uZSIpCnsKICAgIGNvbG9yVmFsdWUgPSAieWVsbG93IjsKICAgIEdNX3NldFZhbHVlKCJjb2xvclZhbHVlIiwgY29sb3JWYWx1ZSk7Cgp9CgpjaGFuZ2VDb2xvcihjb2xvclZhbHVlKTs="},{"name":"琉璃神社老司机：快速上车","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*://hacg.riwee.com/wordpress/*","*://www.hacg.me/wordpress/*","*://www.hacg.in/wordpress/*","*://www.hacg.be/wordpress/*","*://www.hacg.lol/*","*://*hacg.club/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512455},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/17160-%E7%90%89%E7%92%83%E7%A5%9E%E7%A4%BE%E8%80%81%E5%8F%B8%E6%9C%BA-%E5%BF%AB%E9%80%9F%E4%B8%8A%E8%BD%A6/code/%E7%90%89%E7%92%83%E7%A5%9E%E7%A4%BE%E8%80%81%E5%8F%B8%E6%9C%BA%EF%BC%9A%E5%BF%AB%E9%80%9F%E4%B8%8A%E8%BD%A6.user.js","uuid":"93745b99-d3b6-49f7-8315-4d217cce0579","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnkInnkoPnpZ7npL7ogIHlj7jmnLrvvJrlv6vpgJ/kuIrovaYKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpdGh1Yi5jb20vcGRrc3QvTW9ua2V5U2NyaXB0Ci8vIEB2ZXJzaW9uICAgICAgMC4xMDk2Ci8vIEBkZXNjcmlwdGlvbiAgRG9uJ3QgcGFuaWMuCi8vIEBhdXRob3IgICAgICAg57qi6aKG5be+77yMcGRrc3QKLy8gQGluY2x1ZGUgICAgICAqOi8vaGFjZy5yaXdlZS5jb20vd29yZHByZXNzLyoKLy8gQGluY2x1ZGUgICAgICAqOi8vd3d3LmhhY2cubWUvd29yZHByZXNzLyoKLy8gQGluY2x1ZGUgICAgICAqOi8vd3d3LmhhY2cuaW4vd29yZHByZXNzLyoKLy8gQGluY2x1ZGUgICAgICAqOi8vd3d3LmhhY2cuYmUvd29yZHByZXNzLyoKLy8gQGluY2x1ZGUgICAgICAqOi8vd3d3LmhhY2cubG9sLyoKLy8gQGluY2x1ZGUgICAgICAqOi8vKmhhY2cuY2x1Yi8qCi8vIEBpY29uICAgICAgICAgaHR0cDovL3d3dy5oYWNnLm1lL2Zhdmljb24uaWNvCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtZW5kCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCi8v5qC55o2u55CJ55KD56We56S+6ICB5Y+45py6ID3kv67mlLks5pS55o6J6L+H55+t55qE6ZO+5o6l5Lmf5Lya6KKr5pu/5o2i55qE6Zeu6aKYCi8v5L615YigCgooZnVuY3Rpb24gKCkgewogICAgdmFyIG9sZERyaXZlciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2VudHJ5LWNvbnRlbnQnKVswXTsKICAgIHZhciBjaGlsZERyaXZlciA9IG9sZERyaXZlci5jaGlsZE5vZGVzOwogICAgZm9yICh2YXIgaSA9IGNoaWxkRHJpdmVyLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSAvLyDlpI3mnYLluqbmj5DljYfoh7MgTyhuKQogICAgICAgIGlmICh0YWtlTWUgPSBjaGlsZERyaXZlcltpXS50ZXh0Q29udGVudC5tYXRjaCgvKFx3ezQwfSl8KChbQS1aYS16MC05XXsyLDM5fSkoID8pW1x1NGUwMC1cdTlmYTUgXXsyLH0oID8pKyhcd3syLDM3fSlcYikvZykpewogICAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgdGFrZU1lLmxlbmd0aDsgKytqKSB7IC8vIE8oMSkKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRha2VNZVtqXSk7CiAgICAgICAgICAgICAgICB2YXIgaGFzaCA9IHRha2VNZVtqXS50b1N0cmluZygpLnJlcGxhY2UoLyhcc3xbXHU0ZTAwLVx1OWZhNV0pKy9nLCAnJykudHJpbSgpOwogICAgICAgICAgICAgICAgaWYgKGhhc2gubGVuZ3RoID49IDQwKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGZ1ZWwgPSAiPGEgaHJlZj0nbWFnbmV0Oj94dD11cm46YnRpaDoiICsgaGFzaCArICInPuiAgeWPuOacuumTvuaOpTwvYT4iOwogICAgICAgICAgICAgICAgICAgIGNoaWxkRHJpdmVyW2ldLmlubmVySFRNTCA9IGNoaWxkRHJpdmVyW2ldLmlubmVySFRNTC50b1N0cmluZygpLnJlcGxhY2UodGFrZU1lW2pdLCBmdWVsKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KfSkoKTs="},{"name":"為什麼你們就是不能加個空格呢？","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512462},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/2185-%E7%82%BA%E4%BB%80%E9%BA%BC%E4%BD%A0%E5%80%91%E5%B0%B1%E6%98%AF%E4%B8%8D%E8%83%BD%E5%8A%A0%E5%80%8B%E7%A9%BA%E6%A0%BC%E5%91%A2/code/%E7%82%BA%E4%BB%80%E9%BA%BC%E4%BD%A0%E5%80%91%E5%B0%B1%E6%98%AF%E4%B8%8D%E8%83%BD%E5%8A%A0%E5%80%8B%E7%A9%BA%E6%A0%BC%E5%91%A2%EF%BC%9F.user.js","uuid":"4a32a9a9-434d-470d-a53a-c0874633e521","source":""},{"name":"挊","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*://avmo.pw/*","http*://avso.pw/*","http*://avxo.pw/*","http*://www.av28.com/*/movie/*","http*://*javlibrary.com/*","http*://*javlib.com/*","http*://*javl10.com/*","http*://*jav11b.com/*","http*://www.libredmm.com/products/*","http*://www.javbus.com/*","http*://www.javbus.me/*","http*://www.javbus2.com/*","http*://www.javbus3.com/*","http*://www.javbus5.com/*","http*://www.icpmp.com/fanhao/*.html","http*://blog.jav4you.com/*","http*://*1pondo.tv/*/index.htm","http*://www.jade-net-home.com/products/*","http*://pan.baidu.com/disk/home*","http*://115.com/?tab=offline&mode=wangpan","http*://www.furk.net/users/files/add"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"magnet":"s","search_index":"n0"},"ts":1490185235631},"enabled":true,"position":7,"file_url":"https://sleazyfork.org/scripts/8392-%E6%8C%8A/code/%E6%8C%8A.user.js","uuid":"959dae7e-72e4-4255-afa4-532a5308fcc3","source":""},{"name":"iciba划词翻译","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["*"],"orig_excludes":["http://www.iciba.com*"],"orig_includes":["http://*","https://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":["open.iciba.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"ctrlKey_actived":"n0"},"ts":1490781051863},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/6303-iciba%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91/code/iciba%E5%88%92%E8%AF%8D%E7%BF%BB%E8%AF%91.user.js","uuid":"56767365-3546-461d-bec2-849876d8181a","source":""},{"name":"soTab - Search Engine Switcher","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["*.baidu.com/link?*"],"orig_includes":["*.baidu.com/*","*.so.com/*","*.bing.com/*","*.zhihu.com/search?*","*.sogou.com/*","/^https?://[a-z]+\\.google\\.[a-z,\\.]+/.+$/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document_end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512479},"enabled":true,"position":9,"file_url":"https://greasyfork.org/scripts/14856-sotab-search-engine-switcher/code/soTab%20-%20Search%20Engine%20Switcher.user.js","uuid":"c3a8e86f-f677-4de6-89e8-847a1c879ec7","source":""},{"name":"Tiny Customize","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/^https?:\\/\\/(.+\\.)?github\\./","http://bbs.3dmgame.com/*","http://bbs.kafan.cn/*","http://forum.gamer.com.tw/*","http://poedb.tw/dps*","http://tieba.baidu.com/*","https://forum.gamer.com.tw/*","https://login.taobao.com/*","https://www.chiphell.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512486},"enabled":false,"position":10,"file_url":"https://greasyfork.org/scripts/19823-tiny-customize/code/Tiny%20Customize.user.js","uuid":"54e9e427-8090-42bc-bfb6-a85b93fdf845","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFRpbnkgQ3VzdG9taXplCi8vIEBkZXNjcmlwdGlvbiDkuLrluLjnlKjnvZHnq5nmt7vliqDlip/og73lrprliLbjgILkvovlpoLvvJozRE1HYW1l44CB6LS05ZCn44CB5reY5a6d44CBR2l0SHViLi4uCi8vIEBuYW1lc3BhY2UgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMTk4MjMtdGlueS1jdXN0b21pemUKLy8gQGhvbWVwYWdlVVJMIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy8xOTgyMy10aW55LWN1c3RvbWl6ZQovLyBAYXV0aG9yICAgICAgbm9ub3JvYXpvcm8KLy8gQGluY2x1ZGUgICAgIC9eaHR0cHM/OlwvXC8oLitcLik/Z2l0aHViXC4vCi8vIEBpbmNsdWRlICAgICBodHRwOi8vYmJzLjNkbWdhbWUuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly9iYnMua2FmYW4uY24vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovL2ZvcnVtLmdhbWVyLmNvbS50dy8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vcG9lZGIudHcvZHBzKgovLyBAaW5jbHVkZSAgICAgaHR0cDovL3RpZWJhLmJhaWR1LmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwczovL2ZvcnVtLmdhbWVyLmNvbS50dy8qCi8vIEBpbmNsdWRlICAgICBodHRwczovL2xvZ2luLnRhb2Jhby5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cHM6Ly93d3cuY2hpcGhlbGwuY29tLyoKLy8gQHZlcnNpb24gICAgIDEuMS4xMgovLyBAZ3JhbnQgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCmNvbnN0IGhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdDsKY29uc3QgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwpjb25zdCBwYXRobmFtZSA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTsKCi8qKgogKiDojrflj5bnq4vljbPmiafooYznmoTmk43kvZzjgIIKICovCmNvbnN0IGdldEluc3RhbnRBY3Rpb25zID0gZnVuY3Rpb24gKCkKewogICAgY29uc3QgYWN0aW9ucyA9IFtdOwoKICAgIGlmIChob3N0ID09PSAiZm9ydW0uZ2FtZXIuY29tLnR3IikKICAgIHsKICAgICAgICAvLyDlt7Tlk4jlp4bnibnjgIIKCiAgICAgICAgLy8g5Y+N5Y+N5bm/5ZGK5qOA5rWL44CCCiAgICAgICAgY29uc3QgYWN0aW9uID0gZnVuY3Rpb24gKCkKICAgICAgICB7CiAgICAgICAgICAgIGlmICh3aW5kb3cuQW50aUFkKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB3aW5kb3cuQW50aUFkLmNoZWNrID0gZnVuY3Rpb24gKCkgeyB9OwogICAgICAgICAgICAgICAgd2luZG93LkFudGlBZC5ibG9jayA9IGZ1bmN0aW9uICgpIHsgfTsKICAgICAgICAgICAgICAgIHdpbmRvdy5BbnRpQWQudmVyaWZ5TGluayA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhbHNlOyB9OwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBhY3Rpb25zLnB1c2goYWN0aW9uKTsKICAgIH0KICAgIGVsc2UgaWYgKAogICAgICAgIGhvc3QgPT09ICJiYnMua2FmYW4uY24iIHx8CiAgICAgICAgaG9zdCA9PT0gImJicy4zZG1nYW1lLmNvbSIgfHwKICAgICAgICBob3N0ID09PSAid3d3LmNoaXBoZWxsLmNvbSIKICAgICkKICAgIHsKICAgICAgICAvLyDljaHppa3jgIEzRE1HYW1l44CBQ2hpcGhlbGwg6K665Z2b77yIRGlzY3V6IOmpseWKqOeahOiuuuWdm++8ieOAggoKICAgICAgICAvLyDlsY/olL3mlrnlkJHplK7nv7vpobXjgIIKICAgICAgICBjb25zdCBhY3Rpb24gPSBmdW5jdGlvbiAoKQogICAgICAgIHsKICAgICAgICAgICAgaWYgKHdpbmRvdy5rZXlQYWdlU2Nyb2xsKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB3aW5kb3cua2V5UGFnZVNjcm9sbCA9IGZ1bmN0aW9uICgpIHsgfTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgYWN0aW9ucy5wdXNoKGFjdGlvbik7CiAgICB9CiAgICBlbHNlIGlmICgvXmh0dHBzP1w6XC9cL3BvZWRiXC50dyhcLz8uKilcL2Rwcy8udGVzdChocmVmKSkKICAgIHsKICAgICAgICAvLyDmtYHkuqHnvJblubTlj7LjgIIKCiAgICAgICAgLy8g5bGP6JS96buY6K6k6Ieq5Yqo5YWo6YCJ54mp5ZOB5L+h5oGv44CB6Ieq5Yqo5p+l6K+i54mp5ZOB5L+h5oGv44CCCiAgICAgICAgY29uc3QgYWN0aW9uID0gZnVuY3Rpb24gKCkKICAgICAgICB7CiAgICAgICAgICAgIGNvbnN0IGVsZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjaXRlbWluZm9gKTsKICAgICAgICAgICAgZWxlbS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIChlKSA9PgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICB9LCB0cnVlKTsKCiAgICAgICAgICAgIGVsZW0uYWRkRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsIChlKSA9PgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpZiAoZS5rZXkgPT09ICJFbnRlciIpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgZm9ybVthY3Rpb25ePSJkcHMiXWApLnN1Ym1pdCgpOwogICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgdHJ1ZSk7CgogICAgICAgICAgICBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoImtleXVwIiwgKGUpID0+CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGlmIChlLmN0cmxLZXkgJiYgKGUua2V5ID09PSAidiIgfHwgZS5rZXkgPT09ICJWIikpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgZm9ybVthY3Rpb25ePSJkcHMiXWApLnN1Ym1pdCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgICAgIGFjdGlvbnMucHVzaChhY3Rpb24pOwogICAgfQogICAgZWxzZSBpZiAoaG9zdCA9PT0gImxvZ2luLnRhb2Jhby5jb20iKQogICAgewogICAgICAgIC8vIOa3mOWuneOAggoKICAgICAgICAvLyDpu5jorqTmmL7npLrlr4bnoIHnmbvlvZXvvIjogIzpnZ4gUVIg56CB55m75b2V77yJ55WM6Z2i44CCCiAgICAgICAgbGV0IGFjdGlvbiA9IGZ1bmN0aW9uICgpCiAgICAgICAgewogICAgICAgICAgICAvLyDlp4vnu4jmmL7npLrlr4bnoIHnmbvlvZXjgIIKICAgICAgICAgICAgbGV0IGVsZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgLnN0YXRpYy1mb3JtLCAuaWNvbmZvbnQuc3RhdGljYCk7CiAgICAgICAgICAgIGZvciAobGV0IGVsZW0gb2YgZWxlbXMpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKCJzdHlsZSIsICJkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50Iik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIOWIoOmZpOaJq+eggeeZu+W9leOAggogICAgICAgICAgICBlbGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYC5sb2dpbi1zd2l0Y2gsIC5sb2dpbi10aXAsIC5pY29uZm9udC5xdWljaywgLnF1aWNrLWZvcm1gKTsKICAgICAgICAgICAgZm9yIChsZXQgZWxlbSBvZiBlbGVtcykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZWxlbS5yZW1vdmUoKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgYWN0aW9ucy5wdXNoKGFjdGlvbik7CiAgICB9CiAgICBlbHNlIGlmICgvXiguK1wuKT9naXRodWJcLi8udGVzdChob3N0KSkKICAgIHsKICAgICAgICAvLyBHaXRIdWLjgIIKCiAgICAgICAgLy8g56aB55So5b+r5o236ZSuOiAicyLvvIwidyLjgIIKICAgICAgICBfZGlzYWJsZUtleWRvd24oInMgdyIpOwogICAgfQoKICAgIHJldHVybiBhY3Rpb25zOwp9OwoKLyoqCiAqIOiOt+WPluW7tui/n+aJp+ihjOeahOaTjeS9nOOAggogKi8KY29uc3QgZ2V0TGF6eUFjdGlvbnMgPSBmdW5jdGlvbiAoKQp7CiAgICBjb25zdCBhY3Rpb25zID0gW107CgogICAgaWYgKGhvc3QgPT09ICJmb3J1bS5nYW1lci5jb20udHciKQogICAgewogICAgICAgIC8vIOW3tOWTiOWnhueJueOAggoKICAgICAgICAvLyDoh6rliqjlvIDlkK/lm77niYfjgIIKICAgICAgICBsZXQgYWN0aW9uID0gZnVuY3Rpb24gKCkKICAgICAgICB7CiAgICAgICAgICAgIGlmICh3aW5kb3cuZm9ydW1TaG93QWxsTWVkaWEpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5mb3J1bVNob3dBbGxNZWRpYSgpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBhY3Rpb25zLnB1c2goYWN0aW9uKTsKICAgIH0KICAgIGVsc2UgaWYgKGhvc3QgPT09ICJ0aWViYS5iYWlkdS5jb20iKQogICAgewogICAgICAgIC8vIOi0tOWQp+OAggoKICAgICAgICAvLyDliKDpmaTlub/lkYrotLTjgIIKICAgICAgICBhY3Rpb24gPSBmdW5jdGlvbiAoKQogICAgICAgIHsKICAgICAgICAgICAgbGV0IHNwYW5zOwogICAgICAgICAgICBjb25zdCBlbGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCNqX3BfcG9zdGxpc3QgPiBkaXZgKTsKICAgICAgICAgICAgZm9yIChsZXQgZWxlbSBvZiBlbGVtcykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3BhbnMgPSBlbGVtLnF1ZXJ5U2VsZWN0b3JBbGwoYC5jb3JlX3JlcGx5X3RhaWwgc3BhbmApOwogICAgICAgICAgICAgICAgZm9yIChsZXQgcyBvZiBzcGFucykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZiAocy5pbm5lclRleHQudHJpbSgpID09PSAi5ZWG5Lia5o6o5bm/IikKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW0ucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgYWN0aW9ucy5wdXNoKGFjdGlvbik7CiAgICB9CgogICAgcmV0dXJuIGFjdGlvbnM7Cn07CgovKioKICog56uL5Y2z5omn6KGM5oyH5a6a55qE5pON5L2c44CCCiAqLwpjb25zdCBleGVjID0gZnVuY3Rpb24gKHBfYWN0aW9ucykKewogICAgaWYgKHBfYWN0aW9ucykKICAgIHsKICAgICAgICBwX2FjdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAocF9hY3Rpb24pCiAgICAgICAgewogICAgICAgICAgICBwX2FjdGlvbigpOwogICAgICAgIH0pOwogICAgfQp9OwoKLy8gMS4g56uL5Y2z5omn6KGM44CCCmV4ZWMoZ2V0SW5zdGFudEFjdGlvbnMoKSk7CgovLyAyLiDlu7bov5/miafooYzjgIIKd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLCBmdW5jdGlvbiAoKQp7CiAgICBleGVjKGdldExhenlBY3Rpb25zKCkpOwp9LCB0cnVlKTsKCi8qKgogKiDnpoHmraLplK7nm5jlv6vmjbfplK7vvIjljZXplK7vvInjgIIKICovCmZ1bmN0aW9uIF9kaXNhYmxlS2V5ZG93bihwX2tleXMpCnsKICAgIGlmICh0eXBlb2YgcF9rZXlzID09PSAic3RyaW5nIikKICAgIHsKICAgICAgICBjb25zdCBrZXlzID0gcF9rZXlzLnNwbGl0KC9cVysvKTsKICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJrZXlkb3duIiwgKGUpID0+CiAgICAgICAgewogICAgICAgICAgICBpZiAoa2V5cy5pbmRleE9mKGUua2V5LnRvTG93ZXJDYXNlKCkpICE9PSAtMSkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICAgICAgfQogICAgICAgIH0sIHRydWUpOwogICAgfQp9Cg=="},{"name":"字体样式美化","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512491},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/12877-%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F%E7%BE%8E%E5%8C%96/code/%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F%E7%BE%8E%E5%8C%96.user.js","uuid":"f0931b81-19e5-41c4-8b9b-ca3dc6de9f51","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIOWtl+S9k+agt+W8j+e+juWMlgovLyBAbmFtZXNwYWNlICAgaHR0cDovL2RheXN2LmdpdGh1Yi5jb20KLy8gQGRlc2NyaXB0aW9uIOS9v+W+l+Wtl+S9k+abtOWKoOWlveeci15fXgovLyBAdmVyc2lvbiAgICAgMgovLyBAaW5jbHVkZSAgICAgICAqCi8vIEBncmFudCAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKdmFyIGNzcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CnZhciB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ2E6aG92ZXJ7Y29sb3I6ICMzOUYgICFpbXBvcnRhbnQ7dGV4dC1zaGFkb3c6LTVweCAzcHggMThweCAjMzlGICFpbXBvcnRhbnQ7LXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLW91dDt9O2F7LXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLW91dDt9Oyp7dGV4dC1kZWNvcmF0aW9uOm5vbmUhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjUwMCFpbXBvcnRhbnQ7fSo6bm90KFtjbGFzcyo9Imhlcm1pdCJdKTpub3QoW2NsYXNzKj0iYnRuIl0pOm5vdChbY2xhc3MqPSJidXR0b24iXSk6bm90KFtjbGFzcyo9Imljb24iXSk6bm90KGkpe2ZvbnQtZmFtaWx5OiAiTWljcm9zb2Z0IFlhaGVpIiwgIk1pY3Jvc29mdCBZYWhlaSIgIWltcG9ydGFudDsgfSp7dGV4dC1zaGFkb3c6MC4wMDVlbSAwLjAwNWVtIDAuMDI1ZW0gIzk5OTk5OSAhaW1wb3J0YW50O30nKTsKY3NzLmFwcGVuZENoaWxkKHRleHQpOwpkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpIFswXS5hcHBlbmRDaGlsZChjc3MpOwo="},{"name":"百度云插件+APIKey","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["/https?\\:\\/\\/(pan|yun)\\.baidu\\.com.*/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":["cn.bing.com","www.bing.com","googleapis.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512497},"enabled":true,"position":12,"file_url":"https://greasyfork.org/scripts/496-%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8F%92%E4%BB%B6-apikey/code/%E7%99%BE%E5%BA%A6%E4%BA%91%E6%8F%92%E4%BB%B6+APIKey.user.js","uuid":"e56afb26-1246-4707-b284-01c3271d4a89","source":""},{"name":"Download YouTube Videos as MP4","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http://www.youtube.com/embed/*","https://www.youtube.com/embed/*"],"orig_includes":["http://www.youtube.com/*","https://www.youtube.com/*"],"orig_matches":["http://www.youtube.com/*","https://www.youtube.com/*","http://s.ytimg.com/yts/jsbin/*","https://s.ytimg.com/yts/jsbin/*","http://manifest.googlevideo.com/*","https://manifest.googlevideo.com/*","http://*.googlevideo.com/videoplayback*","https://*.googlevideo.com/videoplayback*","http://*.youtube.com/videoplayback*","https://*.youtube.com/videoplayback*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"download-youtube-dash-enabled":"s0","download-youtube-script-url":"shttps://www.youtube.com/yts/jsbin/player-zh_CN-vflgs3rMX/base.js","download-youtube-signature-code":"s-2,55,-1"},"ts":1490501796640},"enabled":true,"position":13,"file_url":"https://greasyfork.org/scripts/1317-download-youtube-videos-as-mp4/code/Download%20YouTube%20Videos%20as%20MP4.user.js","uuid":"9e2f321d-9876-4936-9926-a1f5ab7a516f","source":""},{"name":"My Novel Reader","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":true,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http://read.qidian.com/BookReader/vol,*,*.aspx","*/List.htm","*/List.html","*/List.shtml","*/index.htm","*/index.html","*/index.shtml","*/Default.htm","*/Default.html","*/Default.shtml"],"orig_includes":["http://read.qidian.com/*,*.aspx","http://readbook.qidian.com/bookreader/*,*.html","http://read.qidian.com/BookReaderOld/*,*.aspx","http://read.qidian.com/BookReader/*,*.aspx","http://wwwploy.qidian.com/BookReader/*,*.aspx","http://free.qidian.com/Free/ReadChapter.aspx?*","http://www.qdmm.com/BookReader/*,*.aspx","http://www.qdwenxue.com/BookReader/*,*.aspx","http://chuangshi.qq.com/read/bookreader/*.html*","http://chuangshi.qq.com/*bk/*/*-r-*.html*","http://yunqi.qq.com/*bk/*/*.html","http://dushu.qq.com/read.html?bid=*","http://www.jjwxc.net/onebook.php?novelid=*","http://book.zongheng.com/chapter/*/*.html","http://www.xxsy.net/books/*/*.html","http://book.zhulang.com/*/*.html","http://www.17k.com/chapter/*/*.html","http://mm.17k.com/chapter/*/*.html","http://www.kanxia.net/k/*/*/*.html","http://www.qingdi.com/files/article/html/*/*/*.html","http://www.xkzw.org/*/*.html","http://shouda8.com/*/*.html","http://novel.hongxiu.com/*/*/*.shtml","http://www.readnovel.com/novel/*.html","http://tieba.baidu.com/p/*","http://booklink.me/*","https://booklink.me/*","http://www.shumilou.co/*/*.html","http://www.shumilou.us/*/*.html","http://www.shumilou.net/*/*/*.html","http://www.wcxiaoshuo.com/wcxs-*-*/","http://www.xiaoshuoz.com/wcxs-*-*/","http://www.quledu.com/wcxs-*-*/","http://www.ranwen.cc/*/*/*/*.html","http://www.ranwen.net/files/article/*/*/*.html","http://www.64mi.com/*/*/*/*.html","http://www.bxs.cc/*/*.html*","http://www.laishuwu.com/html/*/*/*.html","http://www.binhuo.com/html/*/*/*.html","http://www.haoqi99.com/haoqi99/*/*/*.shtml","http://www.shuhe.cc/*/*/","http://www.dudukan.net/html/*/*/*.html","http://www.hahawx.com/*/*/*.htm","http://www.zhuzhudao.com/txt/*/*/","http://www.zhuzhudao.cc/txt/*/*/","http://www.dahaomen.net/txt/*/*/","http://www.tadu.com/book/*/*/","http://www.aishoucang.com/*/*.html","http://www.wanshuba.com/Html/*/*/*.html","http://www.zhuishu.net/files/article/html/*/*/*.html","http://www.sqsxs.com/*/*/*.html*","http://www.caiwei.tw/html/*/*.html","http://www.hotsk.com/Html/Book/*/*/*.shtml","http://www.92to.com/*/*/*.html","http://www.qirexs.com/read-*-chapter-*.html","http://www.du00.com/read/*/*/*.html","http://www.qishuwu.com/*/*/","http://www.wandoou.com/book/*/*.html","http://www.6yzw.org/*/*.html","http://www.6yzw.com/*/*.html","http://www.daomengren.com/*/*.html","http://muyuge.com/*/*.html","http://www.muyuge.net/*/*.html","http://bbs.vyming.com/novel-read-*-*.html","http://www.9imw.com/novel-read-*-*.html","http://www.23zw.com/olread/*/*/*.html","http://www.50zw.com/book_*/*.html","http://www.xiangcunxiaoshuo.com/shu/*/*.html","http://www.lwxs520.com/books/*/*/*.html","http://www.zashu.net/books/*/*/*.html","http://www.piaotian.net/html/*/*/*.html","http://www.yunlaige.com/html/*/*/*.html","http://www.cfwx.net/files/article/html/*/*/*.html","http://www.qiuwu.net/html/*/*/*.html","http://www.fengwu.org/html/*/*/*.html","http://www.xs84.com/*_*/*","http://www.geiliwx.com/GeiLi/*/*/*.shtml*","http://www.123yq.com/read/*/*/*.shtml","http://www.123yq.org/read/*/*/*.shtml","http://www.dhzw.com/book/*/*/*.html","http://www.du00.cc/read/*/*/*.html","http://www.aszw.com/book/*/*/*.html","http://www.xsbashi.com/*_*/","http://www.vodtw.com/Html/Book/*/*/*.html","http://www.fhxs.com/read/*/*/*.shtml","http://www.snwx.com/book/*/*/*.html","http://www.jiaodu8.com/*/*/*/*.html","http://www.fktxt.com/book/*/*.html","http://www.186s.cn/files/article/html/*/*/*.html","http://www.6xs.cn/xs/*/*/*.html","http://www.chaojiqiangbing.com/book/*/*/*.html","http://book.moka123.com/book/*/*/*.html","http://www.suimeng.com/files/article/html/*/*/*.html","http://www.hao662.com/haoshu/*/*/*.html","http://www.tsxs.cc/files/article/html/*/*/*.html","http://www.ziyuge.com/*/*/*/*/*.html","http://book.sfacg.com/Novel/*/*/*/","http://www.7dsw.com/book/*/*/*.html","http://www.d586.com/*/*/","http://www.bookgew.com/Html/Book/*/*/*.htm","http://read.shuhaha.com/Html/Book/*/*/*.html","http://www.shuhaha.com/Html/Book/*/*/*.html","http://www.biqi.me/files/article/html/*/*/*.html","http://www.ttzw.com/book/*/*.html","http://www.uukanshu.com/*/*/*.html","http://www.173ed.com/read/*/*.html","http://www.a240.com/read/*/*.html","http://www.zhuishu.com/*/*.html","http://www.shuangde.cc/*/*.html","http://www.shenmaxiaoshuo.com/ml-*-*/","http://www.86kankan.com/read/*/*.html","http://www.fkzww.com/*/*/*.html","http://www.151kan.com/*/*/*/*.html","http://www.bookabc.net/*/*/*.html","http://www.xshuotxt.com/*/*/*/*.html","http://www.doulaidu.com/*/*/*.html","http://www.d586.com/*/*/","http://www.kanshu.la/book/*/*html","http://www.wtcxs.com/files/article/html/*/*/*.html","http://www.5du5.com/book/*/*/*.html","http://book.kanunu.org/*/*/*.html","http://www.kanunu8.com/book*/*.html","http://paitxt.com/*/*/*.html","http://www.shunong.com/yuedu/*/*/*.html","http://book.yayacms.com/*/book_*_*.html","http://www.yqhhy.cc/*/*/*.html","http://www.nuoqiu.com/static/*/*.html","http://www.17yue.com/*/*/*.html","http://dukeba.com/book/*/*/*.shtml","http://www.wenchangshuyuan.com/html/*/*/*.html","http://www.pofeng.net/xiaoshuo/*/*.html","http://www.epzww.com/book/*/*","http://*.xiaoshuokan.com/haokan/*/*.html","http://www.wobudu.com/*/*.html","http://www.qb5.com/xiaoshuo/*/*/*.html","http://www.23us.com/html/*/*/*.html","http://www.23wx.com/html/*/*/*.html","http://www.xs222.com/html/*/*/*.html","http://www.bixiage.com/*/*/*/*.html","http://www.ranwenxiaoshuo.com/files/article/html/*/*/*.html","http://www.ranwenxiaoshuo.com/*/*-*-*.html","http://www.bjxiaoshuo.com/bjxs-*-*/","http://www.59shuku.com/xiaoshuo/*/*.htm","http://www.16kbook.org/Html/Book/*/*/*.shtml","http://www.dixiaoshuo.com/Html/*/*.html","http://www.nieshu.com/Book/*/*/*.shtml","http://www.tlxsw.com/files/article/html/*/*/*.html","http://www.1kanshu.com/files/article/html/*/*/*.html","http://www.uutxt.org/book/*/*/*.html","http://www.5800.cc/*/*/*/*.html","http://www.biquge.com/*/*.html","http://www.biquge.la/book/*/*.html","http://www.qududu.com/book/*/*/*.html","http://www.free97.cn/book/*/*/*.html","http://www.122s.com/book/*/*.html","http://www.123du.net/dudu-*/*/*.html","http://www.123du.cc/dudu-*/*/*.html","http://www.123du.net/book/*/*.html","http://www.hwafa.com/*/*.html","http://www.qmshu.com/html/*/*/*.html","http://dlzw.cc/article-*-*.html","http://www.shushu5.com/read/*/*.html","http://www.xiaoyanwenxue.com/files/article/html/*/*/*.html","http://www.3gsc.com.cn/bookcon/*_*_*","http://www.bj-ibook.cn/book/*/*/*.htm","http://www.baoliny.com/*/*.html","http://www.dajiadu.net/files/article/html/*/*/*.html","http://www.yankuai.com/files/article/html/*/*/*.html","http://www.docin.net/*/*.html","http://www.dushuge.net/html/*/*/*.html","http://www.xunshu.org/xunshu/*/*/*.html","http://www.moneyren.com/book/*/*/*.shtml","http://wemaxfilipino.com/*/*/*.html","http://www.85618892.cn/xiaoshuo/*/*/*.shtml","http://www.bookba.net/Html/Book/*/*/*.html","http://www.moksos.com/*/*/*.html","http://dudu8.net/novel/*/*/*.html","http://www.dawenxue.net/html/*/*/*.html","http://www.yanmoxuan.org/book/*/*/*.html","http://www.duyidu.com/xiaoshuo/*/*/*.html","http://www.69zw.com/xiaoshuo/*/*/*.html","http://www.kan7.com/xiaoshuo/*/*/*.html","http://www.laishu.com/book/*/*/*.shtml","http://www.bxwx.org/b/*/*/*.html","http://www.bxzw.org/*/*/*/*.shtml","http://www.360118.com/html/*/*/*.html","http://www.59to.com/files/article/xiaoshuo/*/*/*.html","http://www.dyzww.com/cn/*/*/*.html","http://www.9wh.net/*/*/*.html","http://www.luoqiu.net/html/*/*/*.html","http://www.luoqiu.com/html/*/*/*.html","http://www.epzw.com/files/article/html/*/*/*.html","http://www.dashubao.co/book/*/*/*.html","http://b.faloo.com/p/*/*.html","http://www.baikv.com/*/*.html","http://www.66721.com/*/*/*.html","http://www.3dllc.com/html/*/*/*.html","http://www.xstxt.com/*/*/","http://www.zzzcn.com/3z*/*/","http://www.zzzcn.com/modules/article/App.php*","http://www.nilongdao.com/book/*/*/*.html","http://xs321.net/*/*/","http://read.guanhuaju.com/files/article/html/*/*/*.html","http://www.book108.com/*/*/*.html","http://5ycn.com/*/*/*.html","http://www.zhaoxiaoshuo.com/chapter-*-*-*/","http://*zbzw.com/*/*.html","http://manghuangji.cc/*/*.html","http://www.aiqis.com/*/*.html","http://www.fftxt.net/book/*/*.html","http://www.5kwx.com/book/*/*/*.html","http://www.uuxiaoshuo.net/html/*/*/*.html","http://www.sanyyo.org/*.html","http://www.chinaisbn.com/*/*/*.html","http://www.caihongwenxue.com/Html/Book/*/*/*.html","http://www.shushuw.cn/shu/*/*.html","http://www.78xs.com/article/*/*/*.shtml","http://www.miaobige.com/*/*/*.html","http://www.woaixiaoshuo.com/xiaoshuo/*/*/*.html","http://www.ty2016.com/book/*/*.html","http://wx.ty2016.com/*/*/*.html","http://www.my285.com/*/*/*/*.htm","http://www.5858xs.com/html/*/*/*.html","http://book.58xs.com/html/*/*/*.html","http://book.mihua.net/*/*/*/*.html","http://www.hjwzw.com/Book/Read/*,*","http://www.hjwzw.com/Book/Read/*_*","http://www.365essay.com/*/*.htm","http://www.gengxin8.com/read/*/*.html","http://www.365xs.org/books/*/*/*.html","http://www.wuruo.com/files/article/html/*/*/*.html","http://www.remenxs.com/du_*/*/","http://*.8shuw.net/book/*/*.html","http://www.pashuw.com/BookReader/*/*.html","http://read.shanwen.com/html/*/*/*.html","http://www.qqxs.cc/xs/*/*/*.html","http://www.69shu.com/txt/*/*","http://www.e8zw.com/book/*/*/*.html","http://www.biquge.tw/*_*/*.html","http://www.8535.org/*/*/*.html*","http://www.yfzww.com/books/*/*/*.htm","http://www.lewen8.com/lw*/*.html","http://www.pinwenba.com/read/*/*.html","http://down1.qidian.com/bookall/*.htm*","http://www.77nt.com/*/*.html","http://www.quanbenba.com/yuedu/*/*/*.html","http://*.sto.cc/*-*/","http://www.151xs.com/wuxiazuoxiong/*/chapter/*/","http://www.qududu.net/book/*/*/*.html","http://www.uukanshu.net/*/*/*.html"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"add_nextpage_to_history":"btrue","auto_enable":"bfalse","booklink_enable":"btrue","cn2tw":"bfalse","copyCurTitle":"btrue","dblclick_pause":"btrue","debug":"bfalse","disable_auto_launch":"bfalse","hide_footer_nav":"btrue","hide_preferences_button":"bfalse","menu_list_hiddden":"bfalse","picNightModeCheck":"btrue"},"ts":1490445384092},"enabled":true,"position":14,"file_url":"https://greasyfork.org/scripts/292-my-novel-reader/code/My%20Novel%20Reader.user.js","uuid":"9245d989-af38-4c38-890a-90f24c47afb5","source":""},{"name":"gwdang","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://*.jd.com/*","https://*.jd.com/*","http://*.jd.hk/*","https://*.jd.hk/*","http://*.taobao.com/*","https://*.taobao.com/*","http://*.tmall.com/*","https://*.tmall.com/*","https://*.tmall.hk/*","http://*.yixun.com/*","http://*.51buy.com/*","http://*.yhd.com/*","http://*.suning.com/*","http://*.dangdang.com/*","http://*.gome.com.cn/*","http://*.newegg.cn/*","http://*.paipai.com/*","https://*.amazon.com/*","https://*.amazon.cn/*","https://*.amazon.*/dp/*","http://www.kjt.com/*","http://www.kaola.com/*","http://www.tcl.com/*","http://shop.hisense.com/*","http://*.oppo.com/*","http://shop.vivo.com.cn/*","http://www.ebay.com/*","http://t.dianping.com/*","http://*.nuomi.com/*","http://*.meituan.com/*","https://yao.95095.com/*","http://*.feiniu.com/*","http://*.meilishuo.com/*","http://*.mogujie.com/*","http://shop.coolpad.cn/*","http://*.sephora.cn/*","http://*.yesmywine.com/*","http://*.yiguo.com/*","http://*.wanggou.com/*","http://mall.jia.com/*","http://weigou.baidu.com/*","http://*.mi.com/*","http://shop.letv.com/*","http://*.handu.com/*","http://*.taoshu.com/*","http://*.1688.com/*","http://*.muyingzhijia.com/*","http://*.vmall.com/*","http://*.xiji.com/*","http://*.xijie.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512529},"enabled":false,"position":15,"file_url":"https://greasyfork.org/scripts/14466-%E8%B4%AD%E7%89%A9%E5%85%9A%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7/code/%E8%B4%AD%E7%89%A9%E5%85%9A%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7.user.js","uuid":"2c03b7de-9feb-4997-aebc-10c507d28225","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIGd3ZGFuZwovLyBAbmFtZTp6aC1DTiAgIOi0reeJqeWFmuavlOS7t+W3peWFtwovLyBAbmFtZXNwYWNlICAgbm8KLy8gQGRlc2NyaXB0aW9uIOS6rOS4nC7mt5jlrp0u5aSp54yrLuaYk+i/hS7kuprpqazpgIrkuK3lm70u5LiA5Y+35bqXLuiLj+WugeaYk+i0rS7lvZPlvZPnvZEu5Zu9576O5Zyo57q/LuaWsOibi+e9keS4reWbvS7mi43mi43nvZHoh6rliqjmr5Tku7fjgILkuI3kvJrooqvliKDnmoTniYjmnKzvvIjlpKfmpoIKLy8gQGRlc2NyaXB0aW9uOnpoLUNOIOS6rOS4nC7mt5jlrp0u5aSp54yrLuaYk+i/hS7kuprpqazpgIrkuK3lm70u5LiA5Y+35bqXLuiLj+WugeaYk+i0rS7lvZPlvZPnvZEu5Zu9576O5Zyo57q/LuaWsOibi+e9keS4reWbvS7mi43mi43nvZHoh6rliqjmr5Tku7fjgILkuI3kvJrooqvliKDnmoTniYjmnKzvvIjlpKfmpoLlkKcKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLmpkLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwczovLyouamQuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLmpkLmhrLyoKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vKi5qZC5oay8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi50YW9iYW8uY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vKi50YW9iYW8uY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLnRtYWxsLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwczovLyoudG1hbGwuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vKi50bWFsbC5oay8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi55aXh1bi5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyouNTFidXkuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLnloZC5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyouc3VuaW5nLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi5kYW5nZGFuZy5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyouZ29tZS5jb20uY24vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoubmV3ZWdnLmNuLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLnBhaXBhaS5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cHM6Ly8qLmFtYXpvbi5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cHM6Ly8qLmFtYXpvbi5jbi8qCi8vIEBpbmNsdWRlICAgICBodHRwczovLyouYW1hem9uLiovZHAvKgovLyBAaW5jbHVkZSAgICAgaHR0cDovL3d3dy5ranQuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly93d3cua2FvbGEuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly93d3cudGNsLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vc2hvcC5oaXNlbnNlLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi5vcHBvLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vc2hvcC52aXZvLmNvbS5jbi8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vd3d3LmViYXkuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly90LmRpYW5waW5nLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi5udW9taS5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoubWVpdHVhbi5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cHM6Ly95YW8uOTUwOTUuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLmZlaW5pdS5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoubWVpbGlzaHVvLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi5tb2d1amllLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vc2hvcC5jb29scGFkLmNuLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLnNlcGhvcmEuY24vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoueWVzbXl3aW5lLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi55aWd1by5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoud2FuZ2dvdS5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovL21hbGwuamlhLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vd2VpZ291LmJhaWR1LmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi5taS5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovL3Nob3AubGV0di5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyouaGFuZHUuY29tLyoKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qLnRhb3NodS5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyouMTY4OC5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoubXV5aW5nemhpamlhLmNvbS8qCi8vIEBpbmNsdWRlICAgICBodHRwOi8vKi52bWFsbC5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoueGlqaS5jb20vKgovLyBAaW5jbHVkZSAgICAgaHR0cDovLyoueGlqaWUuY29tLyoKLy8gQHZlcnNpb24gICAgIDEuMi43Ci8vIEBncmFudCAJCW5vbmUKLy8gPT0vVXNlclNjcmlwdD09CihmdW5jdGlvbigpewp2YXIgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO3Muc2V0QXR0cmlidXRlKCdzcmMnLCdodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMTQ0NjQtZ3dkL2NvZGUvZ3dkLmpzP3ZlcnNpb249MTcyNjYxJyk7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKTsKfSkoKQ=="},{"name":"Greasyfork Search with Sleazyfork Results include","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["greasyfork.org","sleazyfork.org"],"orig_excludes":[],"orig_includes":["http*://greasyfork.org/*","http*://www.greasyfork.org/*","http*://sleazyfork.org/*","http*://www.sleazyfork.org/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512535},"enabled":true,"position":16,"file_url":"https://greasyfork.org/scripts/23840-greasyfork-search-with-sleazyfork-results-include/code/Greasyfork%20Search%20with%20Sleazyfork%20Results%20include.user.js","uuid":"bd5db117-c2c8-463a-b3d8-0fe17eeff077","source":""},{"name":"Baidu Tieba: No Login","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://tieba.baidu.com/*","*://www.tieba.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512539},"enabled":true,"position":17,"file_url":"https://greasyfork.org/scripts/14151-baidu-tieba-no-login/code/Baidu%20Tieba:%20No%20Login.user.js","uuid":"dfba0b3a-9e0f-4cf7-b653-12ea6bb62844","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgIFZBX2kKLy8gQHZlcnNpb24gICAgIDMuMC4wLjIwMTcwMzEwCi8vIEBncmFudCAgICAgICB1bnNhZmVXaW5kb3cKLy8gQG1hdGNoICAgICAgICo6Ly90aWViYS5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgKjovL3d3dy50aWViYS5jb20vKgovLyBAcnVuLWF0ICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQG5hbWUgICAgICAgIEJhaWR1IFRpZWJhOiBObyBMb2dpbgovLyBAbmFtZTp6aC1DTiAg55m+5bqm6LS05ZCn77ya5LiN55m75b2V5Y2z5Y+v55yL6LS0Ci8vIEBuYW1lOnpoLVRXICDnmb7luqbotLTlkKfvvJrkuI3nmbvlhaXljbPlj6/nnIvosrwKLy8gQGRlc2NyaXB0aW9uIFZpZXcgQmFpZHUgVGllYmEgd2l0aG91dCBsb2dpbi4KLy8gQGRlc2NyaXB0aW9uOnpoLUNOIOeZvuW6pui0tOWQp+eci+i0tO+8iOWMheaLrOalvOS4realvO+8ieaXoOmhu+eZu+W9leOAggovLyBAZGVzY3JpcHRpb246emgtVFcg55m+5bqm6LS05ZCn55yL6LK877yI5YyF5ous5qiT5Lit5qiT77yJ54Sh6aCI55m75YWl44CCCi8vID09L1VzZXJTY3JpcHQ9PQoKdW5zYWZlV2luZG93Lk9iamVjdC5mcmVlemUgPSBudWxsOwoKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uIChldmVudCkgewogIHRyeSB7CiAgICB1bnNhZmVXaW5kb3cuUGFnZURhdGEudXNlci5pc19sb2dpbiA9IDE7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIC8vYWxlcnQoZXJyb3IpOwogIH0KfSwgdHJ1ZSk7Cg=="},{"name":"gpu acceleration of the flash player","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://*","https://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512543},"enabled":false,"position":18,"file_url":"https://greasyfork.org/scripts/17605-gpu-acceleration-of-the-flash-player/code/gpu%20acceleration%20of%20the%20flash%20player.user.js","uuid":"b35c5753-9b1e-4b86-80e0-0e3599f7aa83","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIGdwdSBhY2NlbGVyYXRpb24gb2YgdGhlIGZsYXNoIHBsYXllcgovLyBAbmFtZXNwYWNlICAgc3BpZWxlcjE3Ci8vIEBkZXNjcmlwdGlvbiBUaGlzIHNjcmlwdCBpcyBiYXNlZCBvbiB0aGUgbWV0aG9kIG9mIGluY29ycG9yYXRpbmcgYSBjZXJ0YWluIHZhbHVlIG9mIHRoZSAiZ3B1IiBhdHRyaWJ1dGUgIndtb2RlIiBmbGFzaCBvYmplY3QuIEluY2x1ZGVzIGdwdSBhY2NlbGVyYXRpb24gb2YgdGhlIGZsYXNoIHBsYXllci4gU29sdmVzIHByb2JsZW1zIHdpdGggbGFncyBvZiB0aGUgZmxhc2ggcGxheWVyIHdoZW4gd2F0Y2hpbmcgdmlkZW9zIGFuZCBzdHJlYW1zLiBXb3JrcyBvbiBhbGwgd2Vic2l0ZXMgdGhhdCB1c2UgZmxhc2ggdGVjaG5vbG9neS4KLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly8qCi8vIEBpbmNsdWRlICAgICBodHRwczovLyoKLy8gQHZlcnNpb24gICAgIDMuNwovLyBAZ3JhbnQgICAgICAgZnVuY3Rpb24KLy8gPT0vVXNlclNjcmlwdD09Cgp2YXIgcnVuX3RpbWVfbWF4ID0gMjsKdmFyIHdtb2RlX3ZhbHVlID0gJ2dwdSc7CnZhciB0b2dnbGUgPSBmdW5jdGlvbiAobykgewppZiAobykgewogICBvLnNldEF0dHJpYnV0ZSgnZmEtc2lnbicsIDEpOwogICB2YXIgZGlzcGxheSA9IG8uc3R5bGUuZGlzcGxheTsKICAgby5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgby5zdHlsZS5kaXNwbGF5ID0gZGlzcGxheTsKICAgIH0sIDApOwogIH0KfTsKdmFyIHJlcGxhY2Vfbm9kZSA9IGZ1bmN0aW9uIChvKSB7CmlmIChvKSB7CiAgIGlmIChvLnR5cGUgIT09ICdhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaCcpIHsKICAgfSAKICAgZWxzZSB7CiAgIGNsb25lID0gby5jbG9uZU5vZGUodHJ1ZSk7CiAgIGNsb25lLnNldEF0dHJpYnV0ZSgnZmEtc2lnbicsIDEpOwogICBvLnBhcmVudEVsZW1lbnQucmVwbGFjZUNoaWxkKGNsb25lLCBvKTsKICAgIH0KICB9Cn07CnZhciBydW5fdGltZSA9IDE7CnZhciBmaW5kX3dtb2RlID0gZnVuY3Rpb24gKHQpIHsKICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0Lmxlbmd0aDsgaSsrKSB7CiAgIGlmICh0W2ldLm5hbWUgPT09ICd3bW9kZScgfHwgdFtpXS5uYW1lID09PSAnd01vZGUnKSB7CiAgIHJldHVybiB0W2ldOwogICAgfQogIH0KICAgcmV0dXJuIG51bGw7Cn07CnZhciBpbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKdmFyIG9iamVjdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnb2JqZWN0Jyk7CnZhciBlbWJlZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZW1iZWQnKTsKY29uc29sZS5sb2coJ3J1bl90aW1lJywgcnVuX3RpbWUsIGxvY2F0aW9uKTsKaWYgKHJ1bl90aW1lID09PSBydW5fdGltZV9tYXgpIHsKICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7CiAgfQogICBydW5fdGltZSA9IHJ1bl90aW1lICsgMTsKICAgaWYgKGVtYmVkcy5sZW5ndGggPiAwKSB7CiAgIGZvciAodmFyIGkgPSAwOyBpIDwgZW1iZWRzLmxlbmd0aDsgaSsrKSB7CiAgIGlmIChlbWJlZHNbaV0uY2xpZW50V2lkdGggPCAxMzY2IHx8IGVtYmVkc1tpXS5jbGllbnRIZWlnaHQgPCA3NjggfHwgZW1iZWRzW2ldLnR5cGUgIT09ICdhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaCcpIHsKICB9IAogIGVsc2UgaWYgKGVtYmVkc1tpXS5nZXRBdHRyaWJ1dGUoJ2ZhLXNpZ24nKSkgewogIGNvbnRpbnVlOwogIH0gCiAgZWxzZSB7CiAgZW1iZWRzW2ldLnNldEF0dHJpYnV0ZSgnd21vZGUnLCB3bW9kZV92YWx1ZSk7CiAgcmVwbGFjZV9ub2RlKGVtYmVkc1tpXSwgb2JqZWN0cyk7CiAgfQogIH0KICB9CiAgaWYgKG9iamVjdHMubGVuZ3RoID4gMCkgewogIGZvciAodmFyIGogPSAwOyBqIDwgb2JqZWN0cy5sZW5ndGg7IGorKykgewogIGlmIChvYmplY3RzW2pdLmNsaWVudFdpZHRoIDwgMTM2NiB8fCBvYmplY3RzW2pdLmNsaWVudEhlaWdodCA8IDc2OCB8fCBvYmplY3RzW2pdLnR5cGUgIT09ICdhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaCcpIHsKICB9IAogIGVsc2UgaWYgKG9iamVjdHNbal0uZ2V0QXR0cmlidXRlKCdmYS1zaWduJykpIHsKICBjb250aW51ZTsKICB9IAogIGVsc2UgewogIHZhciBkID0gZmluZF93bW9kZShvYmplY3RzW2pdLmNoaWxkTm9kZXMpOwogIGlmIChkKSB7CiAgZC52YWx1ZSA9IHdtb2RlX3ZhbHVlOwogIH0gCiAgZWxzZSB7CiAgdmFyIGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwYXJhbScpOwogIGUubmFtZSA9ICd3bW9kZSc7CiAgZS52YWx1ZSA9IHdtb2RlX3ZhbHVlOwogIG9iamVjdHNbal0uYXBwZW5kQ2hpbGQoZSk7CiAgfQogIHJlcGxhY2Vfbm9kZShvYmplY3RzW2pdKTsKICB9CiAgfQogIH0KfSwgMTM2Nik7"},{"name":"琉神转","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*://www.hacg.*/wordpress/*","http*://hacg.*/wordpress/*","http*://www.hacg.*/wp/*","http*://hacg.*/wp/*","http*://www.hacg.lol/*","http*://hacg.lol/*","http*://hacg.riwee.com/*","http*://hacg.me/*","http*://hacg.in/*","http*://hacg.be/*","http*://hacg.club/*","http*://hacg.li/*","http*://hacg.fi/*","http*://hacg.red/*","http*://hacg.la/*","http*://hacg.tw/*","http*://hacg.at/*","http*://hacg.ch/*","http*://www.acgpy.com/*","http*://blog.reimu.net/*","http*://pan.baidu.com/share/*","http*://pan.baidu.com/s/*","http*://sexacg.com/*","http*://www.acg.tf/*","http*://acg.tf/*","http*://www.moxacg.com/*","http*://moxacg.*","http*://*.acggj.com/*","http*://acg12.com/*","http*://*.acg12.com/*","http*://www.acgnz.cc/*","http*://nacg.me/*","http*://www.tianshit.com/*","http*://www.oomoe.moe/*","http*://www.kaze5.com/*","http*://www.acg15.com/*","http*://www.acglover.top/*","http*://lifanmoe.com/*","http*://www.idanmu.*","http*://*.sijihuisuo.club/*","http*://sijihuisuo.club/*","http*://acg18.us/*","http*://*.acg18.us/*","http*://*.acg44.com/*","http*://zuiacg.com/*","http*://www.galacg.me/*","http*://www.mhecy.com/*","http*://acgzone.org/*","http*://www.acgzone.org/*","http*://uraban.me/*","http*://www.uraban.me/*","http*://acgmoon.*","http*://www.jiyue.*","http*://www.moe-acg.*/*","http*://www.mygalgame.com/*","http*://htai.*","http*://gmgard.com/*","http*://*.gmgard.com/*","http*://www.kou.moe/*","http*://www.91moe.com/*","http*://cefamilie.com/*","http*://yui-nya.com/*","http*://www.l-sj.cc/*","http*://htacg.cc/*","http*://www.htacg.cc/*","http*://sleazyfork.org/*/scripts/*","http*://greasyfork.org/*/scripts/*","http*://*yfork.org/*/forum/*discussion*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512552},"enabled":false,"position":19,"file_url":"https://sleazyfork.org/scripts/23316-hacggodturn/code/HacgGodTurn.user.js","uuid":"30226229-8174-42a3-b763-6a7251daa74c","source":""},{"name":"Smoothscroll","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://*","https://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-load","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512556},"enabled":false,"position":20,"file_url":"https://greasyfork.org/scripts/7018-smoothscroll/code/Smoothscroll.user.js","uuid":"844356cd-4a5c-499b-b188-acf57925771a","source":""},{"name":"Weibo Larger Pics 新浪微博之我要看大图","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http://s.weibo.com/user/*","http://weibo.com/app/*","http://weibo.com/app"],"orig_includes":["http://t.sina.com.cn/*","http://weibo.com/*","http://www.weibo.com/*","http://s.weibo.com/*","http://s.weibo.com/pic/*","http://photo.weibo.com/*","http://d.weibo.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512559},"enabled":false,"position":21,"file_url":"https://greasyfork.org/scripts/5038-weibo-larger-pics-%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E4%B9%8B%E6%88%91%E8%A6%81%E7%9C%8B%E5%A4%A7%E5%9B%BE/code/Weibo%20Larger%20Pics%20%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E4%B9%8B%E6%88%91%E8%A6%81%E7%9C%8B%E5%A4%A7%E5%9B%BE.user.js","uuid":"5a3890f4-7c7b-401b-b8d1-c7e4c3e0a81c","source":""},{"name":"DuckDuckMenu","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*://duckduckgo.com/?q=*"],"orig_matches":["http://mycroftproject.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512563},"enabled":false,"position":22,"file_url":"https://greasyfork.org/scripts/3658-duckduckmenu/code/DuckDuckMenu.user.js","uuid":"6940dd41-ec17-4523-9ea5-a1eb8a09b76f","source":""},{"name":"e-hentai magnet link","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["http://exhentai.org/gallerytorrents.php?*","https://exhentai.org/gallerytorrents.php?*","http://e-hentai.org/gallerytorrents.php?*","https://e-hentai.org/gallerytorrents.php?*","http://g.e-hentai.org/gallerytorrents.php?*","https://g.e-hentai.org/gallerytorrents.php?*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512567},"enabled":false,"position":23,"file_url":"https://sleazyfork.org/scripts/13311-e-hentai-magnet-link/code/e-hentai%20magnet%20link.user.js","uuid":"87ac8782-9fa7-43db-bf06-b0ff8f87fe6b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBlLWhlbnRhaSBtYWduZXQgbGluawovLyBAbmFtZXNwYWNlICAgIHlvb29vfgovLyBAdmVyc2lvbiAgICAgIDAuNQovLyBAZGVzY3JpcHRpb24gIGFkZCBtYWduZXQgbGluayB0byBkb3dubG9hZCBwYWdlCi8vIEBhdXRob3IgICAgICAgQSBHb29kIEd1eQovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9leGhlbnRhaS5vcmcvZ2FsbGVyeXRvcnJlbnRzLnBocD8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9leGhlbnRhaS5vcmcvZ2FsbGVyeXRvcnJlbnRzLnBocD8qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL2UtaGVudGFpLm9yZy9nYWxsZXJ5dG9ycmVudHMucGhwPyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2UtaGVudGFpLm9yZy9nYWxsZXJ5dG9ycmVudHMucGhwPyoKLy8gQG1hdGNoICAgICAgICBodHRwOi8vZy5lLWhlbnRhaS5vcmcvZ2FsbGVyeXRvcnJlbnRzLnBocD8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9nLmUtaGVudGFpLm9yZy9nYWxsZXJ5dG9ycmVudHMucGhwPyoKLy8gQHJlcXVpcmUgICAgICBodHRwOi8vY2RuLnN0YXRpY2ZpbGUub3JnL2pxdWVyeS8xLjkuMS9qcXVlcnkubWluLmpzCi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zeXN0ZW0vc2NyZWVuc2hvdHMvc2NyZWVuc2hvdHMvMDAwLzAwMi8zMzcvb3JpZ2luYWwvZDUxZDIxZGJiNmZkNTI2NjNlYjI3NDRmYWQxODk3MmJkNTA3MzYyMi5qcGcKLy8gQGdyYW50ICAgICAgICBub25lCi8vIEBjb250cmlidXRpb25VUkwgaHR0cDovL2Nsc28udGsvZG9uYXRlLwovLyBAY29udHJpYnV0aW9uQW1vdW50IDYuNjYKLy8gPT0vVXNlclNjcmlwdD09CgokKCJmb3JtIGEiKS5lYWNoKGZ1bmN0aW9uKGkpewogICAgJCh0aGlzKS5hZnRlcignPGJyLz48YSBzdHlsZT0iY29sb3I6cmVkIiBocmVmPSJtYWduZXQ6P3h0PXVybjpidGloOicgCiAgICAgICAgICAgICAgICAgICsgdGhpcy5ocmVmLm1hdGNoKC9cLyhcdyspXC50b3JyZW50L2kpWzFdICsgCiAgICAgICAgICAgICAgICAgICciPjxpbWcgc3JjPSJodHRwczovL2dyZWFzeWZvcmsub3JnL3N5c3RlbS9zY3JlZW5zaG90cy9zY3JlZW5zaG90cy8wMDAvMDAyLzMzNi9vcmlnaW5hbC9tYWduZXQucG5nIiB3aWR0aD0iMjRweCIgaGVpZ2h0PSIyNHB4IiAvPltEb3dubG9hZCBieSBtYWduZXQgbGlua108L2E+Jyk7CiAgICAKfSk7CgokKHdpbmRvdykua2V5ZG93bihmdW5jdGlvbihldmVudCl7CiAgICAvL2FsZXJ0KGV2ZW50LmtleUNvZGUpOwogICAgc3dpdGNoKGV2ZW50LmtleUNvZGUpIHsKICAgICAgICBjYXNlIDI3OgogICAgICAgICAgICB3aW5kb3cuY2xvc2UoKTsKICAgICAgICAgICAgYnJlYWs7CiAgICB9Cn0pOwo="},{"name":"Ex绅士界面汉化","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*://exhentai.org/*","*://ul.exhentai.org/*","*://g.e-hentai.org/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512571},"enabled":false,"position":24,"file_url":"https://sleazyfork.org/scripts/22850-ex%E7%BB%85%E5%A3%AB%E7%95%8C%E9%9D%A2%E6%B1%89%E5%8C%96/code/Ex%E7%BB%85%E5%A3%AB%E7%95%8C%E9%9D%A2%E6%B1%89%E5%8C%96.user.js","uuid":"5ae5f103-919c-4df3-b62b-af350bba14c6","source":""},{"name":"ByPass Caoliu Href(跳过草榴链接广告)","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":true,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["http://*.t66y.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512579},"enabled":false,"position":25,"file_url":"https://sleazyfork.org/scripts/23637-bypass-caoliu-href-%E8%B7%B3%E8%BF%87%E8%8D%89%E6%A6%B4%E9%93%BE%E6%8E%A5%E5%B9%BF%E5%91%8A/code/ByPass%20Caoliu%20Href(%E8%B7%B3%E8%BF%87%E8%8D%89%E6%A6%B4%E9%93%BE%E6%8E%A5%E5%B9%BF%E5%91%8A).user.js","uuid":"192e305a-5581-4010-adb7-a1ccc5cd2dfd","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBCeVBhc3MgQ2FvbGl1IEhyZWYo6Lez6L+H6I2J5qa06ZO+5o6l5bm/5ZGKKQovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDAuMQovLyBAZGVzY3JpcHRpb24gIENhb2xpdSBvZmZlbiBwdXQgYSB0aGlyZCB3ZWJzaXRlIGluIGl0cyBsaW5rIGhyZWYsIHRoaXMgc2NyaXB0IHNraXAgdGhhdCBzdGVwIGRpcmVjdGx5Ci8vIEBhdXRob3IgICAgICAgQWxleAovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2JhYmVsLWNvcmUvNS42LjE1L2Jyb3dzZXItcG9seWZpbGwubWluLmpzCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvYmFiZWwtY29yZS81LjYuMTUvYnJvd3Nlci5taW4uanMKLy8gQHJlcXVpcmUgICAgICBodHRwczovL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktMy4xLjEubWluLmpzCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2xvZGFzaC80LjE2LjIvbG9kYXNoLmNvcmUubWluLmpzCi8vIEBtYXRjaCAgICAgICAgaHR0cDovLyoudDY2eS5jb20vKgovLyA9PS9Vc2VyU2NyaXB0PT0KCi8qIGpzaGludCBpZ25vcmU6c3RhcnQgKi8KdmFyIGlubGluZV9zcmMgPSAoPD48IVtDREFUQVsKLyoganNoaW50IGlnbm9yZTplbmQgKi8KLyoganNoaW50IGVzbmV4dDogdHJ1ZSAqLwogICAgdmFyIGNvbnZlcnRVUkwgPSBmdW5jdGlvbihvbGRVUkwpewogICAgICAgICB2YXIgYXJyID0gb2xkVVJMLnNwbGl0KCIvPyIpOwogICAgICAgIGlmKGFyci5sZW5ndGggPCAyKSB7IHJldHVybiBvbGRVUkw7IH0KICAgICAgICByZXR1cm4gYXJyWzFdLnJlcGxhY2UoL19fX19fXy9nLCIuIik7CiAgICB9OwogICAgICAgICAgICAgICAgICAgICAgIAogICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsKICAgICAgICB2YXIgbGlua3MgPSAkKCJhW2hyZWZePSdodHRwOi8vd3d3LnZpaWRpaS5pbmZvJ10iKTsKICAgICAgICBfLmVhY2gobGlua3MsIGZ1bmN0aW9uKHZhbCl7CiAgICAgICAgICAgIHZhciBocmVmID0gJCh2YWwpLmF0dHIoImhyZWYiKTsKICAgICAgICAgICAgJCh2YWwpLmF0dHIoImhyZWYiLGNvbnZlcnRVUkwoaHJlZikgKTsKICAgICAgICB9KTsKICAgIH0pOwoKCi8qIGpzaGludCBpZ25vcmU6c3RhcnQgKi8KXV0+PC8+KS50b1N0cmluZygpOwp2YXIgYyA9IGJhYmVsLnRyYW5zZm9ybShpbmxpbmVfc3JjKTsKZXZhbChjLmNvZGUpOwovKiBqc2hpbnQgaWdub3JlOmVuZCAqLw=="},{"name":"Yet Another Weibo Filter","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":true,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http://weibo.com/a/bind/*","http://weibo.com/nguide/*","http://weibo.com/"],"orig_includes":["http://www.weibo.com/*","http://weibo.com/*","http://d.weibo.com/*","http://s.weibo.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512585},"enabled":false,"position":26,"file_url":"https://greasyfork.org/scripts/3249-yet-another-weibo-filter/code/Yet%20Another%20Weibo%20Filter.user.js","uuid":"7178228b-561c-4a75-982c-3b7f03e0f763","source":""},{"name":"Weibo Lite (无干扰新浪微博)","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*://weibo.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512589},"enabled":false,"position":27,"file_url":"https://greasyfork.org/scripts/2122-weibo-lite-%E6%97%A0%E5%B9%B2%E6%89%B0%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A/code/Weibo%20Lite%20(%E6%97%A0%E5%B9%B2%E6%89%B0%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A).user.js","uuid":"21de0abf-c8b2-4c30-9b06-776e725f58d6","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICBXZWlibyBMaXRlICjml6DlubLmibDmlrDmtarlvq7ljZopCi8vIEBuYW1lc3BhY2UgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL2FkZWxhYnMKLy8gQGRlc2NyaXB0aW9uICAgICBDbGVhciB0aGUgYWRzIGFuZCBhZGQgYSB0b2dnbGUgYnV0dG9uIHRvIGhpZGUvc2hvdyBib3R0b20gYmFyIGFuZCBzaWRlIGJhcnMuCi8vIEB2ZXJzaW9uICAgICAgICAgMi4xLjEKLy8gQGxpY2Vuc2UgICAgICAgICBHUEwgdmVyc2lvbiAzCi8vIEBpbmNsdWRlICAgICAgICAgKjovL3dlaWJvLmNvbS8qCi8vIEByZXF1aXJlICAgICAgICAgaHR0cDovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9qcXVlcnkvMS44LjMvanF1ZXJ5Lm1pbi5qcwovLyBAZ3JhbnQgICAgICAgICAgIG5vbmUKLy8gQHJ1bi1hdCAgICAgICAgICBkb2N1bWVudC1lbmQKLy8gPT0vVXNlclNjcmlwdD09CgovLyBBZGQgYSBidXR0b24uCnZhciBidXR0b24gPSAkKCc8YnV0dG9uPjwvYnV0dG9uPicpOwokKCdkaXYuV19tYWluX2EnKS5iZWZvcmUoYnV0dG9uLmhpZGUoKSk7Ci8vIEZ1bmN0aW9uIHRoZSBidXR0b24uCnZhciBzcGVlZCA9IDI1MDsKYnV0dG9uLnRleHQoJ2hpZGUnKS5jbGljayhmdW5jdGlvbigpewogICAgdmFyIGJhcnMgPSAkKCdkaXYuV19tYWluX2wsIGRpdi5XX21haW5fciwgZGl2Lmdsb2JhbF9mb290ZXInKTsKICAgIGlmIChidXR0b24udGV4dCgpID09ICdoaWRlJykgewogICAgICAgYmFycy5oaWRlKHNwZWVkLCBmdW5jdGlvbigpe2J1dHRvbi50ZXh0KCdzaG93Jyk7fSk7CiAgICB9IGVsc2UgewogICAgICAgYmFycy5mYWRlSW4oc3BlZWQsIGZ1bmN0aW9uKCl7YnV0dG9uLnRleHQoJ2hpZGUnKTt9KTsKICAgIH0KfSk7Ci8vIFNob3cgdGhlIGJ1dHRvbiBhbmQgdGhlbiB0b2dnbGUuCmJ1dHRvbi5zaG93KHNwZWVkLCBmdW5jdGlvbigpe2J1dHRvbi5jbGljaygpO30pOwoKLy8gSGlkZSBhZHMuCmZ1bmN0aW9uIGhpZGVfYWRzKCkgewogICAgY29uc29sZS5sb2coJ2hpZGVfYWRzJyk7CiAgICB2YXIgYWRzID0gJChbCiAgICAgICAgLy8gVGlwcwogICAgICAgICdkaXYubGF5ZXJfdGlwc192ZXJzaW9uJywKICAgICAgICAvLyBIZWFkZXIgYWRzCiAgICAgICAgJ2Rpdi5wbF9jb250ZW50X2JpenRpcHMnLAogICAgICAgICdkaXYudGlwc193cmFwcGVyJywKICAgICAgICAnZGl2LnRpcHNfcGxheWVyJywKICAgICAgICAnZGl2LnRpdGxlX2FyZWEnLAogICAgICAgIC8vIExlZnQgc2lkZSBhZHMKICAgICAgICAvLyBSaWdodCBzaWRlIGFkcwogICAgICAgICdkaXYuYWR2ZXJfY29udEInLAogICAgICAgICdkaXYjcGxfcmlnaHRtb2RfYWRzMzYnLAogICAgICAgICdkaXYuTV9hY3Rpdml0aWVzJywKICAgICAgICAnZGl2Lk1fYWJ2ZXJBcmVhJywKICAgICAgICAvLyBNaWQgYWRzCiAgICAgICAgJ2Rpdi5XX25vX2JvcmRlcicsCiAgICAgICAgJ2Rpdi5XQl9mZWVkX3R5cGVbZmVlZHR5cGU9ImFkIl0nLAogICAgICAgIC8vIEZvb3RlciBhZHMKICAgICAgICAnZGl2LmZvb3Rlcl9hZHYnLAogICAgXS5qb2luKCkpOwogICAgYWRzLmVhY2goZnVuY3Rpb24oKXsKICAgICAgICBpZiAoJCh0aGlzKS5jc3MoJ2Rpc3BsYXknKSA9PSAnbm9uZScpIHsgcmV0dXJuOyB9CiAgICAgICAgY29uc29sZS5sb2coJ0hpZGUnLCB0aGlzKTsKICAgICAgICAkKHRoaXMpLnJlbW92ZSgpOwogICAgfSk7Cn0KLy8gT2JzZXJ2ZSBhbmQgcmVwZWF0CiQoWwogICAnYm9keScsCiAgICdkaXYuV19taW5pYmxvZycsCiAgICdkaXYuV0JfZmVlZCcsCl0uam9pbigpKS5lYWNoKGZ1bmN0aW9uKGksIG8pewogICAgdmFyIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24obXV0YXRpb25zKSB7CiAgICAgICAgaGlkZV9hZHMoKTsKICAgIH0pOwogICAgb2JzZXJ2ZXIub2JzZXJ2ZShvLCB7Y2hpbGRMaXN0OiB0cnVlfSk7Cn0pOwo="},{"name":"Cleaner Weibo","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["http://weibo.com/*","http://www.weibo.com/*","http://d.weibo.com/*","http://s.weibo.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512593},"enabled":false,"position":28,"file_url":"https://greasyfork.org/scripts/21015-%E5%8E%BB%E7%9A%AE%E5%BE%AE%E5%8D%9A/code/%E5%8E%BB%E7%9A%AE%E5%BE%AE%E5%8D%9A.user.js","uuid":"055b523c-c4c8-4fdc-a3de-5a9fe4492c8a","source":""},{"name":"fake 115Browser","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://115.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512601},"enabled":false,"position":29,"uuid":"230d7a96-86c5-419d-8a38-26fed72db12a","source":""},{"name":"115fullspeed","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*://115.com/?ct=file*","http*://115.com/?aid=-1&search*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512608},"enabled":false,"position":30,"file_url":"https://github.com/gameclamp/115fullspeed/raw/master/115fullspeed.user.js","uuid":"837eb2ff-e5bd-4310-a7cf-a263ae96578a","source":""},{"name":"720P.im 豆瓣电影下载搜索工具","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://movie.douban.com/subject/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512611},"enabled":false,"position":31,"file_url":"https://greasyfork.org/scripts/6059-720p-im-%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7/code/720Pim%20%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E4%B8%8B%E8%BD%BD%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7.user.js","uuid":"3bdf24f7-944e-4f73-9618-d75021ab0718","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIDcyMFAuaW0g6LGG55Oj55S15b2x5LiL6L295pCc57Si5bel5YW3Ci8vIEBuYW1lc3BhY2UgICAgICBodHRwOi8vNzIwcC5pbQovLyBAZGVzY3JpcHRpb24gICAg5aKe5Yqg6LGG55Oj55S15b2x55qE5LiL6L295pCc57Si6ZO+5o6lCi8vIEBhdXRob3IgICAgICAgICA3MjBwLmltCi8vIEB2ZXJzaW9uICAgICAgICAxLjAKLy8gQGluY2x1ZGUgICAgICAgIGh0dHA6Ly9tb3ZpZS5kb3ViYW4uY29tL3N1YmplY3QvKgovLyBAZ3J1bnQgICAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCmZ1bmN0aW9uIHJ1biAoKSB7CiAgICB2YXIgdGl0bGUgPSAkKCdodG1sIGhlYWQgdGl0bGUnKS50ZXh0KCk7CiAgICB0aXRsZSA9IHRpdGxlLnJlcGxhY2UoICco6LGG55OjKScsICcnICkudHJpbSgpOwogICAgdGl0bGUgPSBlbmNvZGVVUklDb21wb25lbnQodGl0bGUpOwoKICAgIHZhciBNb3ZpZV9saW5rcyA9IFsKICAgICAgICB7aHRtbDogIjcyMFAuaW0iLCBocmVmOiAiaHR0cDovLzcyMHAuaW0vc2VhcmNoLnBocD9xPSIgKyB0aXRsZX0sCiAgICAgICAge2h0bWw6ICLkurrkurrlvbHop4YiLCBocmVmOiAiaHR0cDovL3d3dy55YXlheHouY29tL3NlYXJjaC8iICsgdGl0bGV9CiAgICBdOwoKICAgIHZhciBsaW5rID0gJCgiPGRpdj4iKS5hdHRyKCJjbGFzcyIsICJncmF5X2FkIik7CiAgICBsaW5rLmFwcGVuZCgnPGgyPuS4i+i9vemTvuaOpTrCtyDCtyDCtyDCtyDCtyDCtzwvaDI+Jyk7CiAgICAKICAgIGFwcGVuZExpbmtzKE1vdmllX2xpbmtzLCBsaW5rKTsKCiAgICAkKCcuYXNpZGUnKS5wcmVwZW5kKGxpbmspOwogICAgCiAgICBmdW5jdGlvbiBhcHBlbmRMaW5rcyhpdGVtcywgYXBwZW5kVG8pIHsKICAgICAgICBpdGVtcy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGkpIHsKICAgICAgICAgICAgJCgiPGE+IikKICAgICAgICAgICAgLmh0bWwoaXRlbS5odG1sKQogICAgICAgICAgICAuYXR0cih7CiAgICAgICAgICAgICAgICBocmVmOiBpdGVtLmhyZWYsCgkJdGFyZ2V0OiAiX2JsYW5rIgoJICAgIH0pCgkgICAgLmFwcGVuZFRvKGFwcGVuZFRvKTsKCgkgICAgaWYgKGkgIT0gaXRlbXMubGVuZ3RoIC0gMSkgewoJICAgICAgICBhcHBlbmRUby5hcHBlbmQoIjxiciAvPiIpOwoJICAgIH0KCX0pOwogICAgfQp9CgpydW4oKQ=="},{"name":"Douban Download Search","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://movie.douban.com/subject/*","http://book.douban.com/subject/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512614},"enabled":false,"position":32,"file_url":"https://greasyfork.org/scripts/300-douban-download-search/code/Douban%20Download%20Search.user.js","uuid":"de49917e-7465-446c-aee7-8d11fe2b103d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIERvdWJhbiBEb3dubG9hZCBTZWFyY2gKLy8gQG5hbWVzcGFjZSAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS95d3poYWlxaQovLyBAZGVzY3JpcHRpb24gICAg5aKe5Yqg6LGG55Oj55S15b2x44CB5Zu+5Lmm55qE5LiL6L295pCc57Si6ZO+5o6lCi8vIEBhdXRob3IgICAgICAgICB5d3poYWlxaQovLyBAdmVyc2lvbiAgICAgICAgMS4xCi8vIEBpbmNsdWRlICAgICAgICBodHRwOi8vbW92aWUuZG91YmFuLmNvbS9zdWJqZWN0LyoKLy8gQGluY2x1ZGUgICAgICAgIGh0dHA6Ly9ib29rLmRvdWJhbi5jb20vc3ViamVjdC8qCi8vIEBncnVudCAgICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKZnVuY3Rpb24gcnVuICgpIHsKCXZhciBtb3ZpZVRpdGxlID0gJCgnaDEgc3BhbjplcSgwKScpLnRleHQoKTsKCXZhciB0aXRsZSA9ICQoJ2h0bWwgaGVhZCB0aXRsZScpLnRleHQoKTsKCXZhciBrZXl3b3JkMSA9IHRpdGxlLnJlcGxhY2UoICco6LGG55OjKScsICcnICkudHJpbSgpOwoJdmFyIGtleXdvcmQyID0gZW5jb2RlVVJJQ29tcG9uZW50KCBrZXl3b3JkMSApOwoJdmFyIG1vdmllU2ltcGxlVGl0bGUgPSBtb3ZpZVRpdGxlLnJlcGxhY2UoL+esrFxTK+Wtoy4qLywgIiIpOwoKCXZhciBNb3ZpZV9saW5rcyA9IFsKCQkvLyB7IGh0bWw6ICLnmb7luqbnm5giLCBocmVmOiAiaHR0cDovL3d3dy5iYWlkdS5jb20vcz93ZD0iICsgZW5jb2RlVVJJQ29tcG9uZW50KGtleXdvcmQxICsgIiBzaXRlOnBhbi5iYWlkdS5jb20iKX0sCgkJeyBodG1sOiAi55m+5bqm55uYIiwgaHJlZjogImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vc2VhcmNoP3E9IiArIGtleXdvcmQxICsgIiBzaXRlOnBhbi5iYWlkdS5jb20ifSwKCQl7IGh0bWw6ICLkurrkurrlvbHop4YiLCBocmVmOiAiaHR0cDovL3d3dy55YXlheHouY29tL3NlYXJjaC8iICsgbW92aWVTaW1wbGVUaXRsZSB9LAoJCXsgaHRtbDogIlZlcnlDRCIsIGhyZWY6ICJodHRwOi8vd3d3LnZlcnljZC5jb20vc2VhcmNoL2ZvbGRlcnMvIiArIGtleXdvcmQyIH0sCgkJeyBodG1sOiAiU2ltcGxlQ0QiLCBocmVmOiAiaHR0cDovL3NpbXBsZWNkLm1lL3NlYXJjaC9lbnRyeS8/cXVlcnk9IiArIGtleXdvcmQxIH0sCgkJeyBodG1sOiAiRG9ua2V5NHUiLCBocmVmOiAiaHR0cDovL2RvbmtleTR1LmNvbS9zZWFyY2gvIiArIG1vdmllVGl0bGUgfSwKCQl7IGh0bWw6ICJUb3JyZW50IFByb2plY3QiLCBocmVmOiAiaHR0cDovL3RvcnJlbnRwcm9qZWN0LmNvbS8/JmJ0bkc9VG9ycmVudCtTZWFyY2gmbnVtPTIwJnN0YXJ0PTAmcz0iICsga2V5d29yZDIgfSwKCQl7IGh0bWw6ICJHb29nbGUgTWluaVNEIiwgaHJlZjogImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vc2VhcmNoP2llPVVURi04JnE9IiArIG1vdmllVGl0bGUgKyAiK01pbmlTRCIgfQoJXTsKCgl2YXIgQm9va19saW5rcyA9IFsKCQl7IGh0bWw6ICLnmb7luqbnm5giLCBocmVmOiAiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2g/cT0iICsga2V5d29yZDEgKyAiIHNpdGU6cGFuLmJhaWR1LmNvbSJ9LAoJCXsgaHRtbDogIm1Mb29rIiwgaHJlZjogImh0dHA6Ly93d3cubWxvb2subW9iaS9zZWFyY2g/cT0iICsga2V5d29yZDIgfSwKCQl7IGh0bWw6ICJWZXJ5Q0QiLCBocmVmOiAiaHR0cDovL3d3dy52ZXJ5Y2QuY29tL3NlYXJjaC9mb2xkZXJzLyIgKyBrZXl3b3JkMiB9LAoJCXsgaHRtbDogIlNpbXBsZUNEIiwgaHJlZjogImh0dHA6Ly9zaW1wbGVjZC5tZS9zZWFyY2gvZW50cnkvP3F1ZXJ5PSIgKyBrZXl3b3JkMSB9LAoJCXsgaHRtbDogIkRvbmtleTR1IiwgaHJlZjogImh0dHA6Ly9kb25rZXk0dS5jb20vc2VhcmNoLyIgKyBtb3ZpZVRpdGxlIH0sCgkJeyBodG1sOiAiVG9ycmVudCBQcm9qZWN0IiwgaHJlZjogImh0dHA6Ly90b3JyZW50cHJvamVjdC5jb20vPyZidG5HPVRvcnJlbnQrU2VhcmNoJm51bT0yMCZzdGFydD0wJnM9IiArIGtleXdvcmQyIH0sCgkJeyBodG1sOiAiR29vZ2xlIiwgaHJlZjogImh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vc2VhcmNoP2llPVVURi04JnE9IiArIG1vdmllVGl0bGUgfSwKCV07CgoJdmFyIGxpbmsgPSAkKCI8ZGl2PiIpLmFwcGVuZCgKCQkkKCI8c3Bhbj4iKS5hdHRyKCJjbGFzcyIsICJwbCIpLmh0bWwoIuS4i+i9vemTvuaOpToiKQoJKTsKCglzd2l0Y2gobG9jYXRpb24uaG9zdCl7CgkJY2FzZSAibW92aWUuZG91YmFuLmNvbSI6CgkJCWFwcGVuZExpbmtzKE1vdmllX2xpbmtzLCBsaW5rKQoKCQkJbGluay5hcHBlbmQoJzxicj4nKQoJCQkJLmFwcGVuZCgnPHNwYW4gY2xhc3M9InBsIj7lrZfluZXpk77mjqU6PC9zcGFuPicpCgkJCQkuYXBwZW5kKAoJCQkJCSQoIjxhPiIpLmF0dHIoewoJCQkJCQlocmVmOiAiaHR0cDovL3Nob290ZXIuY24vc2VhcmNoLyIgKyBtb3ZpZVRpdGxlLAoJCQkJCQl0YXJnZXQ6ICJfYmxhbmsiCgkJCQkJfSkuaHRtbCgiU2hvb3RlciIpCgkJCQkpOwoKCQkJYnJlYWs7CgkJY2FzZSAiYm9vay5kb3ViYW4uY29tIjoKCQkJYXBwZW5kTGlua3MoQm9va19saW5rcywgbGluaykKCQkJYnJlYWs7Cgl9CgoJJCgnI2luZm8nKS5hcHBlbmQobGluayk7CgoKCWZ1bmN0aW9uIGFwcGVuZExpbmtzKGl0ZW1zLCBhcHBlbmRUbyl7CgkJaXRlbXMuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpKXsKCQkJJCgiPGE+IikKCQkJCS5odG1sKGl0ZW0uaHRtbCkKCQkJCS5hdHRyKHsKCQkJCQlocmVmOiBpdGVtLmhyZWYsCgkJCQkJdGFyZ2V0OiAiX2JsYW5rIgoJCQkJfSkKCQkJCS5hcHBlbmRUbyhhcHBlbmRUbyk7CgoJCQlpZihpICE9IGl0ZW1zLmxlbmd0aCAtMSl7CgkJCQlhcHBlbmRUby5hcHBlbmQoIiAvICIpOwoJCQl9CgkJfSk7Cgl9Cn0KCnJ1bigp"},{"name":"Douban Book HUST Helper","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://book.douban.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512618},"enabled":false,"position":33,"file_url":"https://greasyfork.org/scripts/4720-douban-book-hust-helper/code/Douban%20Book%20HUST%20Helper.user.js","uuid":"fd267f86-61cc-4a8c-b652-aadbeab64838","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIERvdWJhbiBCb29rIEhVU1QgSGVscGVyCi8vIEBkZXNjcmlwdGlvbiDosYbnk6Por7vkuabmt7vliqBIVVNU5Zu+5Lmm6aaG5L+h5oGvCi8vIEBhdXRob3IgICAgICBsYXN0bWF5ZGF5Ci8vIEBuYW1lc3BhY2UgICBodHRwOi8vbGFzdG1heWRheS5vcmcKLy8gQGluY2x1ZGUgICAgIGh0dHA6Ly9ib29rLmRvdWJhbi5jb20vKgovLyBAcmVxdWlyZSAgICAgaHR0cDovL2xpYnMuYmFpZHUuY29tL2pxdWVyeS8yLjAuMC9qcXVlcnkubWluLmpzCi8vIEB2ZXJzaW9uICAgICAwLjAuMQovLyBAZ3JhbnQgR01fZ2V0VmFsdWUKLy8gQGdyYW50IEdNX3NldFZhbHVlCi8vIEBncmFudCBHTV94bWxodHRwUmVxdWVzdAovLyBAZ3JhbnQgR01fb3BlbkluVGFiCi8vIEBncmFudCBHTV9kZWxldGVWYWx1ZQovLyBAZ3JhbnQgR01fYWRkU3R5bGUKLy8gQGdyYW50IEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKLy8gQGljb24gICAgICAgIGh0dHA6Ly9pbWczLmRvdWJhbi5jb20vcGljcy9kb3ViYW4taWNvbnMvZmF2aWNvbl8xNngxNi5wbmcKLy8gPT0vVXNlclNjcmlwdD09CgpmdW5jdGlvbiBpbnNlcnRJbmZvKCl7CglpZigkKCcjYnV5aW5mbycpLmxlbmd0aCl7CgkJJCgnI2J1eWluZm8nKS5iZWZvcmUoJzxkaXYgY2xhc3M9ImdyYXlfYWQiIGlkPSJodXN0bGliIj48L2Rpdj4nKTsKCQkkKCcjaHVzdGxpYicpLmFwcGVuZCgnPGgyPuWNjuenkeWbvuS5pummhuacieayoeaciT88L2gyPjxkaXYgY2xhc3M9ImJzIiBpZD0iaXNleCI+PC9kaXY+Jyk7CgkJaWYgKHR5cGVvZigkKCcjaW5mbycpLnRleHQoKS5zcGxpdCgnSVNCTjonKVsxXSkgIT0gJ3VuZGVmaW5lZCcpIHsKCQkJdmFyIGlzYm4gPSAkKCcjaW5mbycpLnRleHQoKS5zcGxpdCgnSVNCTjonKVsxXS5zcGxpdCgnICcpWzFdOwoJCQl2YXIgdXJsID0gJ2h0dHA6Ly9mdHAubGliLmh1c3QuZWR1LmNuL3NlYXJjaH5TMCpjaHgvP3NlYXJjaHR5cGU9aSZzZWFyY2hhcmc9KycgKyBpc2JuOwoJCQlHTV94bWxodHRwUmVxdWVzdCh7CgkJCQl1cmw6IHVybCwKCQkJCW1ldGhvZDogJ0dFVCcsCgkJCQlvbmxvYWQ6IGZ1bmN0aW9uIChtc2cpIHsKCQkJCQl2YXIgdGV4dCA9IG1zZy5yZXNwb25zZVRleHQ7CgkJCQkJaWYodGV4dC5pbmRleE9mKCfmnKrmib7liLDnrKblkIjmn6Xor6LmnaHku7bnmoTppobol48nKSAhPSAtMSkgewoJCQkJCQkkKCcjaXNleCcpLmh0bWwoJ+aIkeenkeW/q+WOu+S5sOS5puWVpn7nq5/nhLbmsqHmnIkhJyk7CgkJCQkJfWVsc2UgewoJCQkJCQkkKCcjaXNleCcpLmh0bWwoJ+aIkeenkeeahOWbvuS5pummhuW9k+eEtuaciSEnKTsKCQkJCQkJJCgnI2lzZXgnKS5hZnRlcignPGJyPjxoMj7lnKjlk6rph4zlnKjlk6rph4w/PC9oMj4nKTsKCQkJCQkJJCh0ZXh0KS5maW5kKCIuYmliT3JkZXJFbnRyeSIpLmFwcGVuZFRvKCcjaHVzdGxpYicpOwoJCQkJCQkkKHRleHQpLmZpbmQoJy5iaWJJdGVtcycpLmFwcGVuZFRvKCcjaHVzdGxpYicpOwoJCQkJCQkkKCcjaHVzdGxpYicpLmFwcGVuZCgnPGJyPjxoMj7lho3lhbfkvZPngrk/PC9oMj48cD48ZGl2IGNsYXNzPSJicyIgaWQ9Im1kdCI+PGEgaHJlZj0iJyArIHVybCArICciIHRhcmdldD0iX2JsYW5rIj7miLPov5nph4x+PC9hPjwvZGl2PicpOwoJCQkJCQlmb3IgKHZhciBpID0gMTsgaSA8PSAkKCcjaHVzdGxpYiB0cicpLmxlbmd0aCAtIDE7IGkrKykgewoJCQkJCQkJdmFyIGJvb2tudW0gPSAkKCcjaHVzdGxpYiB0cicpLmVxKGkpLmZpbmQoJ3RkJykuZXEoMSkudGV4dCgpOwoJCQkJCQkJJCgnI2h1c3RsaWIgdHInKS5lcShpKS5maW5kKCd0ZCcpLmVxKDEpLnJlbW92ZSgpOwoJCQkJCQkJJCgnI2h1c3RsaWIgdHInKS5lcShpKS5maW5kKCd0ZCcpLmVxKDApLmFmdGVyKCc8dGQgd2lkdGg9IjQzJSI+JysgYm9va251bSArICc8L3RkPicpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9KTsKCQl9IGVsc2UgewoJCQkkKCcjaXNleCcpLmh0bWwoJ+ern+eEtuayoeacie+8gScpOwoJCX0KCX0KfQoKaW5zZXJ0SW5mbygpOw=="},{"name":"Douban Book Bar","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*://www.amazon.cn/*","*://item.jd.com/*","*://product.dangdang.com/*","*://product.china-pub.com/*","*://product.suning.com/*","*://www.suning.com/emall/*","*://www.duokan.com/book/*","*://www.winxuan.com/product/*","*://www.ituring.com.cn/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":["douban.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512622},"enabled":false,"position":34,"file_url":"https://greasyfork.org/scripts/3737-douban-book-bar/code/Douban%20Book%20Bar.user.js","uuid":"38475360-0d29-4f17-a5e7-4474d7f4bd7a","source":""},{"name":"WeiPhoneDownloadHelper","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://bbs.feng.com/read-htm-tid-*.html","http://bbs.feng.com/thread-htm-fid-*.html","http://bbs.feng.com/forum.php*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512625},"enabled":false,"position":35,"file_url":"https://greasyfork.org/scripts/668-weiphonedownloadhelper/code/WeiPhoneDownloadHelper.user.js","uuid":"6500bb1c-d6e2-4251-bac2-285dba190964","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIFdlaVBob25lRG93bmxvYWRIZWxwZXIKLy8gQG5hbWVzcGFjZSAgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS95d3poYWlxaQovLyBAYXV0aG9yICAgICAgICAgeXd6aGFpcWkKLy8gQHZlcnNpb24gICAgICAgIDEuMy4yCi8vIEBkZXNjcmlwdGlvbiAgICDmibnph4/kuIvovb3lqIHplIvorrrlnZvnmoTnlLXlrZDkuaYKLy8gQGhvbWVwYWdlVVJMICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy82NjgvCgovLyBAaW5jbHVkZSAgICAgICAgaHR0cDovL2Jicy5mZW5nLmNvbS9yZWFkLWh0bS10aWQtKi5odG1sCi8vIEBpbmNsdWRlICAgICAgICBodHRwOi8vYmJzLmZlbmcuY29tL3RocmVhZC1odG0tZmlkLSouaHRtbAovLyBAaW5jbHVkZSAgICAgICAgaHR0cDovL2Jicy5mZW5nLmNvbS9mb3J1bS5waHAqCi8vIEBydW4tYXQgICAgICAgICBkb2N1bWVudC1lbmQKLy8gQGdyYW50ICAgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09Cgp2YXIgJCA9IGpRdWVyeTsKCnZhciBSRVMgPSBnZXRNU3RyKGZ1bmN0aW9uKCl7Cgl2YXIgaHRtbDsKCS8qCgk8ZGl2PgoJCTxidXR0b24gaWQ9ImRvd25sb2FkQnV0dG9uIj7mibnph4/kuIvovb08L2J1dHRvbj4KCQk8ZGl2IGlkPSJiYXRjaFB1Ymxpc2giIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CgkJCTxkaXYgaWQ9ImJhdGNoSGVhZGVyIj4KCQkJCTxhIGlkPSJjbG9zZUJ1dHRvbiIgY2xhc3M9ImF1aV9jbG9zZSIgaHJlZj0iamF2YXNjcmlwdDo7Ij7DlzwvYT4KCQkJPC9kaXY+CgkJCTxkaXYgaWQ9ImJhdGNoQ29udGVudCI+CgkJCQk8cHJlIGlkPSJiYXRjaGVkbGluayI+PC9wcmU+CgkJCTwvZGl2PgoJCTwvZGl2PgoJCTxkaXYgaWQ9ImJhdGNoTm90aWNlIiBzdHlsZT0iZGlzcGxheTpub25lIj4KCQk8L2Rpdj4KCTwvZGl2PgoJICovCgl2YXIgY3NzVGV4dDsKCS8qCgkJI2Rvd25sb2FkQnV0dG9uIHsKCQkJcG9zaXRpb246Zml4ZWQ7CgkJCXRvcDo4MHB4OwoJCQlyaWdodDo4cHg7CgkJCXotaW5kZXg6IDEwMDsKCQl9CgkJI2JhdGNoUHVibGlzaCB7CgkJCXBvc2l0aW9uOmZpeGVkOwoJCQl6LWluZGV4OjEwMDE7CgkJCXRvcDo0MCU7CgkJCWxlZnQ6MzUlOwoJCQl3aWR0aDogNTMwcHg7CgkJCWJhY2tncm91bmQ6d2hpdGU7CgkJCWJvcmRlcjogM3B4IHNvbGlkICNBQUE7CgkJfQoJCSNiYXRjaGVkbGluayB7CgkJCWhlaWdodDogMjUwcHg7CgkJCW92ZXJmbG93OiBzY3JvbGw7CgkJfQoJCSNiYXRjaE5vdGljZSB7CgkJCXBvc2l0aW9uOmZpeGVkOwoJCQl6LWluZGV4OjEwMDE7CgkJCXRvcDoxMCU7CgkJCWxlZnQ6MzUlOwoJCQliYWNrZ3JvdW5kOiAjRjlFREJFOwoJCQlib3gtc2hhZG93OiAxcHggMnB4IDVweCByZ2JhKDAsIDAsIDAsIDAuNSk7CgkJCWJvcmRlcjogMXB4IHNvbGlkICNGQkRBOTE7CgkJCXBhZGRpbmc6IDVweDsKCQl9CgkJI2JhdGNoTm90aWNlID4gYiB7CgkJCW1hcmdpbi1sZWZ0OiA1cHg7CgkJfQoJICovCn0pOwoKCnZhciBsb2NhdGlvbkhyZWYgPSBsb2NhdGlvbi5ocmVmOwoKbG9jYXRpb25IcmVmLm1hdGNoKC90aHJlYWQtaHRtLWZpZHxtb2Q9Zm9ydW1kaXNwbGF5LykgJiYgKGZ1bmN0aW9uKCl7CgoJJCgnI2Jic190b3BfbmV3cywgI2ZvcnVtX3J1bGVzXzIyNCcpLmhpZGUoKTsKCgl2YXIgaGlkZVRleHQgPSBbCgkJIue9keaYk+OAiui/t+S9oOilv+a4uOOAi+aJi+a4uOWFrOa1iyIsCgkJIjNE57qv5q2j5Lit5Zu96aOO44CK5rC05rWS6Iux6ZuE44CLIiwKCQki44CQ6L2v5Lu244CR5oSf5oGp54i25q+N77yM5YWN6LS55LiL6L2977ya44CQ5b+r6YCf6Zeu5Yy755Sf44CRIiwKCQki44CQ6L2v5Lu244CR6ZqP5pe26ZqP5ZywIOenu+WKqOinhumike+8gemFtzbop4bpopHova/ku7bku4vnu40iLAoJCSLlqIHplIvmiYvmuLjmjqfvvJrnjqnjgIrpvpnnurnkuInlm73jgIsiLAoJCSLjgIrmlL7lvIDpgqPkuInlm73jgIvlqIHplIvniYjngavniIbkuIrnur8iLAoJCSLjgIrlpKnlpKnniLHokIzku5njgIsiLAoJCSLngonnn7PkvKDor7QiLAoJCSLlkIzmraXmjqgiLAoJCSLoi7nmnpzmiYvmuLgiLAoJCSLoi7nmnpzliqnmiYsiLAoJCSLlhZTlhZTliqnmiYsiLAoJCSLlkIzmraXmjqgiLAoJCSLotaJpUGFkIG1pbmkiLAoJCSLlvpdpUGhvbmUiLAoJCSJpUGFkIG1pbmky5aSn5aWWIiwKICAgICAgICAi5Yig5qGj5bCB5rWL54Gr54iG5byA5ZCvIgoJXTsKCgkvLyDpmpDol4/nva7pobblub/lkYrnmoTooYwKCSQoJ3Rib2R5W2lkXj0ic3RpY2t0aHJlYWRfIl0nKS5lYWNoKGZ1bmN0aW9uKHJvdyl7CiAgICAgICAgaWYgKCQodGhpcykuZmluZCgnc3BhbltpZF49InJ1c2h0aW1lcl8iXScpLmxlbmd0aCkgewogICAgICAgICAgICAkKHRoaXMpLmhpZGUoKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCgkJdmFyIHRleHQgPSAkKHRoaXMpLnRleHQoKTsKCQlmb3IgKHZhciBpID0gMCwgbCA9IGhpZGVUZXh0Lmxlbmd0aDsgaSA8IGw7IGkrKykgewoJCQlpZiAodGV4dC5pbmRleE9mKGhpZGVUZXh0W2ldKSAhPSAtMSkgewoJCQkJJCh0aGlzKS5oaWRlKCk7CgkJCQlyZXR1cm47CgkJCX0KCQl9Cgl9KTsKfSkoKQoKbG9jYXRpb25IcmVmLm1hdGNoKC9yZWFkLWh0bS10aWR8bW9kPXZpZXd0aHJlYWQvKSAmJiAoZnVuY3Rpb24oKXsKCgl2YXIgcHJlVXJsID0gbG9jYXRpb24ub3JpZ2luLAoJCWF0dGFjaFNlbGVjdG9yID0gJy5hdHRubSA+IGEsIHNwYW5baWRePSJhdHRhY2hfIl0gPiBhJywKCQkkYXR0YWNocyA9ICQoYXR0YWNoU2VsZWN0b3IpOwoKCWlmICgkYXR0YWNocy5zaXplKCkgPT0gMCkgewoJCXJldHVybjsKCX0KCgkkKCc8c3R5bGU+JykuaHRtbChSRVMuY3NzVGV4dCkuYXBwZW5kVG8oJ2hlYWQnKTsKCgkkKFJFUy5odG1sKS5hcHBlbmRUbygnYm9keScpOwoKCSQoJyNjbG9zZUJ1dHRvbicpLmNsaWNrKGZ1bmN0aW9uKCl7CgkJJCgnI2JhdGNoUHVibGlzaCcpLmhpZGUoKTsKCX0pCgoJJCgnI2Rvd25sb2FkQnV0dG9uJykuYXR0cigndGl0bGUnLCAn5YWxICcgKyAkYXR0YWNocy5zaXplKCkgKyAnIOS4qumZhOS7ticpLmNsaWNrKGZ1bmN0aW9uKCl7CgkJdmFyIGxpbmtzID0gJC5tYWtlQXJyYXkoJChhdHRhY2hTZWxlY3RvcikpCgkJCSRiYXRjaE5vdGljZSA9ICQoJyNiYXRjaE5vdGljZScpOwoJCXZhciBkb3duVXJscyA9IFtdOwoKCQkkYmF0Y2hOb3RpY2UuaHRtbCgn5q2j5Zyo6I635Y+W5LitLi4uJyArICc8Yj4xLycgKyBsaW5rcy5sZW5ndGggKyAnPC9iPicpCgkJCS5zaG93KCk7CgoJCWZ1bmN0aW9uIGhhbmRsZVJlc3VsdCgpIHsKCQkJaWYgKGxpbmtzLmxlbmd0aCA+IDApIHsKCQkJCSRiYXRjaE5vdGljZS5odG1sKCfmraPlnKjojrflj5bkuK0uLi4nICsgJzxiPicgKyBkb3duVXJscy5sZW5ndGggKyAnLycgKyBsaW5rcy5sZW5ndGggKyAnPC9iPicpOwoJCQkJZ2V0RG93bmxvYWRMaW5rKCk7CgkJCX0gZWxzZSB7CgkJCQl2YXIgdXJscyA9IGRvd25VcmxzLmpvaW4oJ1xuJyk7CgkJCQkvLyBjb25zb2xlLmxvZyh1cmxzKTsKCgkJCQkkYmF0Y2hOb3RpY2UuaGlkZSgpOwoJCQkJJCgnI2JhdGNoZWRsaW5rJykuaHRtbCh1cmxzKTsKCQkJCSQoJyNiYXRjaFB1Ymxpc2gnKS5zaG93KCk7CgoJCQkJLy8g6auY5Lqu6YCJ5Lit5paH5pysCgkJCQl2YXIgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpOwoJCQkJdmFyIHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTsKCQkJCXJhbmdlLnNlbGVjdE5vZGVDb250ZW50cygkKCcjYmF0Y2hlZGxpbmsnKVswXSk7CgkJCQlzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7CgkJCQlzZWxlY3Rpb24uYWRkUmFuZ2UocmFuZ2UpOwoJCQl9CgkJfQoKCQlmdW5jdGlvbiBnZXREb3dubG9hZExpbmsoKSB7CgkJCXZhciBsaW5rID0gbGlua3Muc2hpZnQoKTsKCQkJaWYgKCFsaW5rKSByZXR1cm47CgoJCQl2YXIgdXJsID0gbGluay5ocmVmOwoJCQlpZiAodXJsLmluZGV4T2YoJ2FpZD0nKSA+IDApIHsKCQkJCWRvd25VcmxzLnB1c2godXJsKTsKCQkJCWhhbmRsZVJlc3VsdCgpOwoJCQl9IGVsc2UgewoJCQkJdmFyIG0gPSBsaW5rLmdldEF0dHJpYnV0ZSgnb25jbGljaycpLm1hdGNoKC9qUXVlcnkuZ2V0XCgnKC4qPyknLC8pOwoJCQkJaWYgKG0pIHsKCQkJCQl2YXIgdXJsID0gbVsxXTsKCQkJCQkkLmdldCh1cmwsIHt9LCBmdW5jdGlvbihkYXRhKXsKCQkJCQkJdmFyIGRvd25VcmwgPSAkKCc8ZGl2PicpLmh0bWwoZGF0YSkuZmluZCgnYTpmaXJzdCcpLmF0dHIoJ2hyZWYnKTsKCQkJCQkJZG93blVybCA9IHByZVVybCArIGRvd25Vcmw7CgkJCQkJCWRvd25VcmxzLnB1c2goZG93blVybCkKCgkJCQkJCWhhbmRsZVJlc3VsdCgpOwoJCQkJCX0pOwoJCQkJfQoJCQl9CgkJfQoKCQlnZXREb3dubG9hZExpbmsoKQoJfSk7Cgp9KSgpCgoKCi8vIOS7juWHveaVsOS4reiOt+WPluWkmuihjOazqOmHiueahOWtl+espuS4sgpmdW5jdGlvbiBnZXRNU3RyKGZuKSB7CiAgICB2YXIgZm5Tb3VyY2UgPSBmbi50b1N0cmluZygpOwogICAgdmFyIHJldCA9IHt9OwogICAgZm5Tb3VyY2UgPSBmblNvdXJjZS5yZXBsYWNlKC9eW157XSsvLCAnJyk7CiAgICAvLyBjb25zb2xlLmxvZyhmblNvdXJjZSk7CiAgICB2YXIgbWF0Y2hlZDsKICAgIHZhciByZWcgPSAvdmFyXHMrKFskXHddKylbXHNcU10qP1wvXCooW1xzXFNdKz8pXCpcLy9nOwogICAgd2hpbGUgKG1hdGNoZWQgPSByZWcuZXhlYyhmblNvdXJjZSkpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZyhtYXRjaGVkKTsKICAgICAgICByZXRbbWF0Y2hlZFsxXV0gPSBtYXRjaGVkWzJdOwogICAgfTsKCiAgICByZXR1cm4gcmV0Owp9Cg=="},{"name":"qq群文件批量下载","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://qun.qzone.qq.com/group*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512629},"enabled":false,"position":36,"file_url":"https://greasyfork.org/scripts/10004-qq%E7%BE%A4%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/code/qq%E7%BE%A4%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD.user.js","uuid":"9502455c-6691-4229-9225-1586da67e8e0","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBxcee+pOaWh+S7tuaJuemHj+S4i+i9vQovLyBAZGVzY3JpcHRpb24gIOaJuemHj+S4i+i9vee+pOaWh+S7tgovLyBAYXV0aG9yICAgICAgIGZhcndtYXJ0aDx3dWppeXUxMTVAZ21haWwuY29tPgovLyBAcmVxdWlyZSAgICAgICAgaHR0cDovL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktMi4xLjEubWluLmpzCi8vIEBpbmNsdWRlICAgICAgaHR0cDovL3F1bi5xem9uZS5xcS5jb20vZ3JvdXAqCi8vIEBncmFudCAgICAgICAgR01fc2V0Q2xpcGJvYXJkCi8vIEB2ZXJzaW9uICAgICAgMS4wCi8vIEBuYW1lc3BhY2UgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy91c2Vycy8xNDM4Ci8vID09L1VzZXJTY3JpcHQ9PQoKCihmdW5jdGlvbigpewoKICAgIHZhciBncm91cGlkPSAwOwogICAgdmFyIHVpbiA9IDA7CiAgICB2YXIgZ190az0wOwoKICAgIHZhciAgZG93bmxvYWRGaWxlQnlJZnJhbWUgPSBmdW5jdGlvbihhLCBkKSB7CiAgICAgICAgUVpGTC5jb29raWUuc2V0KCJGVE41SyIsIGEuY29va2llKTsKICAgICAgICB2YXIgYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlmcmFtZSIpOwogICAgICAgIGMuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGMpOwogICAgICAgIGMuY29udGVudFdpbmRvdy5sb2NhdGlvbiA9IFFaRkwudXNlckFnZW50LmllIDw9IDggJiYgLyhodG1sfHhodG1sfGh0bXxzZ21sfHNodG1sfGRodG1sfHNodG0pJC8udGVzdChkLmZpbGVuYW1lKSA/IGEudXJsICsgIi8iICsgZCArICIudHh0IiA6IGEudXJsICsgIi8iICsgZDsKICAgIH07CgogICAgdmFyIGRvd25sb2FkQWxsID0gZnVuY3Rpb24oKSB7CiAgICAgICAgZ190ayA9IFFXVC5nZXRBQ1NSRlRva2VuKCk7CiAgICAgICAgdWluPWdfaVVpbjsKICAgICAgICB2YXIgcmVzdFVybD0iaHR0cDovL3F1bi5xem9uZS5xcS5jb20vY2dpLWJpbi9ncm91cF9zaGFyZV9saXN0P3Vpbj0iK3VpbisiJmdyb3VwaWQ9Iitncm91cGlkKyImYnVzc2luZXNzaWQ9MCZjaGFyc2V0PXV0Zi04JmdfdGs9IitnX3RrKyImcj0iICsgTWF0aC5yYW5kb20oKTsKICAgICAgICAkLmdldChyZXN0VXJsLCBmdW5jdGlvbihyZXN1bHQpIHsKICAgICAgICAgICAgaWYgKHJlc3VsdCkgewogICAgICAgICAgICAgICAgdmFyIGl0ZW1fbGlzdCA9IHJlc3VsdC5zdWJzdHJpbmcocmVzdWx0LmluZGV4T2YoIigiKSsxLHJlc3VsdC5sYXN0SW5kZXhPZigiKSIpKTsKICAgICAgICAgICAgICAgIHZhciBkYXRhcz1KU09OLnBhcnNlKGl0ZW1fbGlzdCk7CiAgICAgICAgICAgICAgICBpZihkYXRhcy5jb2RlPT09MCl7CiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW1zID0gZGF0YXMuZGF0YS5pdGVtOyAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBmb3IodmFyIGkgaW4gaXRlbXMpewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbV9maWxlX3BhdGg9aXRlbXNbaV0uZmlsZXBhdGg7IAogICAgICAgICAgICAgICAgICAgICAgICB2YXIgZmlsZV9uYW1lID1pdGVtc1tpXS5maWxlbmFtZTsgCiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBpdGVtX3VybCAgPSJodHRwOi8vcXVuLnF6b25lLnFxLmNvbS9jZ2ktYmluL2dyb3VwX3NoYXJlX2dldF9kb3dudXJsP3Vpbj0iK3VpbisiJmdyb3VwaWQ9Iitncm91cGlkKyImcGE9IitpdGVtX2ZpbGVfcGF0aCsiJmNoYXJzZXQ9dXRmLTgmZ190az0iK2dfdGsrIiZyPSIgKyBNYXRoLnJhbmRvbSgpOyAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICQuZ2V0KGl0ZW1fdXJsLCAoZnVuY3Rpb24odXNlX2ZpbGVuYW1lKXsgcmV0dXJuIGZ1bmN0aW9uKGl0ZW1fcmVzdWx0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihpdGVtX3Jlc3VsdCl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW1fcmVzdWx0X2pzb24gPSBpdGVtX3Jlc3VsdC5zdWJzdHJpbmcoaXRlbV9yZXN1bHQuaW5kZXhPZigiKCIpKzEsaXRlbV9yZXN1bHQubGFzdEluZGV4T2YoIikiKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW1fcmVzdWx0X2pzb25fb2JqPUpTT04ucGFyc2UoaXRlbV9yZXN1bHRfanNvbik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW1fcmVzdWx0X2pzb25fb2JqLmNvZGU9PT0wKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHZhciByZWFsX2Rvd25fdXJsID0gaXRlbV9yZXN1bHRfanNvbl9vYmouZGF0YS51cmwrIi8iK3VzZV9maWxlbmFtZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVhbF9kb3duX3VybCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUudGFibGUoaXRlbV9yZXN1bHRfanNvbl9vYmopOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL0dNX3NldENsaXBib2FyZChyZWFsX2Rvd25fdXJsLCd0ZXh0Jyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvd25sb2FkRmlsZUJ5SWZyYW1lKGl0ZW1fcmVzdWx0X2pzb25fb2JqLmRhdGEsdXNlX2ZpbGVuYW1lKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIuW+l+WIsOaWh+S7tuecn+WunuWcsOWdgOiOt+WPluaVsOaNruWHuumUmSIraXRlbV9yZXN1bHRfanNvbl9vYmouY29kZSApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkoZmlsZV9uYW1lKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAgICAgYWxlcnQoIuW+l+WIsOaWh+S7tuWIl+ihqOWHuumUmSIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9OwoKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsKICAgICAgICB2YXIgaGVyZl9pbmZvICA9IGxvY2F0aW9uLmhyZWY7CiAgICAgICAgdmFyIG15UmUgPSAvaHR0cDpcL1wvcXVuLnF6b25lLnFxLmNvbVwvZ3JvdXAjXCFcLyguKilcL3NoYXJlL2c7CiAgICAgICAgdmFyIGlzX21hdGNoID0gbXlSZS5leGVjKGhlcmZfaW5mbyk7CiAgICAgICAgaWYgKGlzX21hdGNoKSB7CiAgICAgICAgICAgIGdyb3VwaWQ9UmVnRXhwLiQxOwogICAgICAgICAgICB2YXIgdXBsb2FkX3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdHcm91cFNoYXJlX3VwbG9hZFNlbGVjdCcpOwogICAgICAgICAgICAkKCc8YSBjbGFzcz0iYnRuIiBzdHlsZT0icGFkZGluZy1sZWZ0OjEwcHgiPjxzcGFuIGNsYXNzPSJidG4tdmFsIj7mibnph4/kuIvovb08L3NwYW4+PC9hPicpCiAgICAgICAgICAgIC5pbnNlcnRBZnRlcih1cGxvYWRfc2VsZWN0KQogICAgICAgICAgICAuY2xpY2soZG93bmxvYWRBbGwpOwogICAgICAgIH0KICAgIH0sIDMwMDApOwoKfSkoKTs="},{"name":"去除贴吧列表里面的广告","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://tieba.baidu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1489756512642},"enabled":true,"position":37,"file_url":"https://greasyfork.org/scripts/10003-%E5%8E%BB%E9%99%A4%E8%B4%B4%E5%90%A7%E5%88%97%E8%A1%A8%E9%87%8C%E9%9D%A2%E7%9A%84%E5%B9%BF%E5%91%8A/code/%E5%8E%BB%E9%99%A4%E8%B4%B4%E5%90%A7%E5%88%97%E8%A1%A8%E9%87%8C%E9%9D%A2%E7%9A%84%E5%B9%BF%E5%91%8A.user.js","uuid":"4183722a-f757-4583-95a3-2bcb68c0da6c","source":""},{"name":"百度网盘直接下载助手","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1489814321440,"data":{}},"enabled":true,"position":38,"file_url":"https://greasyfork.org/scripts/23635-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"ebab2cc7-f132-45de-974a-d5ba97338dde","source":""},{"name":"Anti-Adblock Killer | Reek","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":true,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["*"],"orig_excludes":[],"orig_includes":["http://*/*","https://*/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":["githubusercontent.com"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"nextchecklist":"s1490867169484","nextcheckupdate":"s1490872756124"},"ts":1490780769484},"enabled":true,"position":39,"file_url":"https://raw.githubusercontent.com/reek/anti-adblock-killer/master/anti-adblock-killer.user.js","uuid":"5ff7ad7e-71b0-428d-8a20-d7e46e4c3724","source":""},{"name":"youku-html5-player","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["http://www.acfun.tv/","http://*.weibo.com/*","http://*.sinaimg.cn/*","http://*.yinyuetai.com/*"],"orig_includes":["http://*.youku.com/*","http://v.youku.com/*","http://*.tudou.com/*","http://tv.sohu.com/*","http://*.iqiyi.com/*","http://*.letv.com/*","http://video.sina.com.cn/*","http://v.qq.com/*","http://61.147.76.6/*","http://222.141.53.5/*","http://*.56.com/*","http://*.bilibili.com/*","http://*.acfun.tv/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1490417064448,"data":{}},"enabled":true,"position":40,"file_url":"https://greasyfork.org/scripts/19282-youku-html5-player/code/youku-html5-player.user.js","uuid":"b9d8beb9-e1e7-4b0a-9a48-def10d9c91af","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICB5b3VrdS1odG1sNS1wbGF5ZXIKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8venl0aHVtLnNpbmFhcHAuY29tL3lvdWt1aHRtbDVwbGF5ZXJib29rbWFyay8KLy8gQHZlcnNpb24gICAgICAyLjAgYmV0YQovLyBAZGVzY3JpcHRpb24gIFRoZSBQcm9ncmFtbWUgb2YgTW90aGVyIERvbid0IFdvcnJ5IEFib3V0IE15IE1hY2Jvb2sgQnVybmluZyBBbnkgTW9yZSB2Mi4wIEJldGEKLy8gQGluY2x1ZGUgICAgICBodHRwOi8vKi55b3VrdS5jb20vKgovLyBAaW5jbHVkZSAgICAgIGh0dHA6Ly92LnlvdWt1LmNvbS8qCi8vIEBpbmNsdWRlICAgICAgaHR0cDovLyoudHVkb3UuY29tLyoKLy8gQGluY2x1ZGUgICAgICBodHRwOi8vdHYuc29odS5jb20vKgovLyBAaW5jbHVkZSAgICAgIGh0dHA6Ly8qLmlxaXlpLmNvbS8qCi8vIEBpbmNsdWRlICAgICAgaHR0cDovLyoubGV0di5jb20vKgovLyBAaW5jbHVkZSAgICAgIGh0dHA6Ly92aWRlby5zaW5hLmNvbS5jbi8qCi8vIEBpbmNsdWRlICAgICAgaHR0cDovL3YucXEuY29tLyoKLy8gQGluY2x1ZGUgICAgICBodHRwOi8vNjEuMTQ3Ljc2LjYvKgovLyBAaW5jbHVkZSAgICAgIGh0dHA6Ly8yMjIuMTQxLjUzLjUvKgovLyBAaW5jbHVkZSAgICAgIGh0dHA6Ly8qLjU2LmNvbS8qCi8vIEBpbmNsdWRlICAgICAgaHR0cDovLyouYmlsaWJpbGkuY29tLyoKLy8gQGluY2x1ZGUgICAgICBodHRwOi8vKi5hY2Z1bi50di8qCi8vIEBleGNsdWRlICAgICAgaHR0cDovL3d3dy5hY2Z1bi50di8KLy8gQGV4Y2x1ZGUgICAgICBodHRwOi8vKi53ZWliby5jb20vKgovLyBAZXhjbHVkZSAgICAgIGh0dHA6Ly8qLnNpbmFpbWcuY24vKgovLyBAZXhjbHVkZSAgICAgIGh0dHA6Ly8qLnlpbnl1ZXRhaS5jb20vKgovLyBAY29weXJpZ2h0ICAyMDEyLTIwMTMsIHp5dGh1bSA8enl0aHVtMDJAZ21haWwuY29tPiAoaHR0cDovL2F0YWxhc2lpLmNvbS8pCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCl7dmFyIGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJyk7bC5zZXRBdHRyaWJ1dGUoJ3JlbCcsJ3N0eWxlc2hlZXQnKTtsLnNldEF0dHJpYnV0ZSgnbWVkaWEnLCdhbGwnKTtsLnNldEF0dHJpYnV0ZSgnaHJlZicsJ2h0dHA6Ly96eXRodW0uc2luYWFwcC5jb20veW91a3VodG1sNXBsYXllcmJvb2ttYXJrL3lvdWt1aHRtbDVwbGF5ZXJib29rbWFyazIuY3NzJyk7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsKTt2YXIgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO3Muc2V0QXR0cmlidXRlKCdzcmMnLCdodHRwOi8venl0aHVtLnNpbmFhcHAuY29tL3lvdWt1aHRtbDVwbGF5ZXJib29rbWFyay95b3VrdWh0bWw1cGxheWVyYm9va21hcmsyLmpzJyk7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKTt9KSgpOw=="},{"name":"YoukuAntiADs+","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://*/*","https://*/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1490417089309,"data":{}},"enabled":true,"position":41,"file_url":"https://greasyfork.org/scripts/5951-youkuantiads/code/YoukuAntiADs+.user.js","uuid":"89c3910e-0e04-4b9c-8f1c-744f21d251e9","source":""},{"name":"去除youku.ku6.iqiyi.tudou.letv广告","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://*/*","https://*/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1490417133008,"data":{}},"enabled":true,"position":42,"file_url":"http://userscripts-mirror.org/scripts/source/165036.user.js","uuid":"af9fde8a-d8bb-4ec2-af8f-467ae49f41f5","source":""},{"name":"youku.com_plus","options":{"awareOfChrome":false,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://www.soku.com*","http://*youku.com*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1490417148105,"data":{}},"enabled":true,"position":43,"file_url":"http://userscripts-mirror.org/scripts/source/88104.user.js","uuid":"11a3c30e-1224-4126-988f-ab0630ffbecf","source":""}]}